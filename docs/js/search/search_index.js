var COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/modules/AppModule.html", [0, 0.626, 1, 2.035]],
      [
        "body/modules/AppModule.html",
        [
          0, 0.942, 1, 3.968, 2, 1.101, 3, 1.309, 4, 1.574, 5, 1.574, 6, 1.309,
          7, 2.173, 8, 1.574, 9, 2.518, 10, 2.518, 11, 3.216, 12, 0.033, 13,
          3.216, 14, 3.216, 15, 2.911, 16, 2.911, 17, 2.173, 18, 1.574, 19,
          1.433, 20, 0.348, 21, 0.305, 22, 0.305, 23, 3.023, 24, 2.674, 25,
          0.744, 26, 4.172, 27, 0.596, 28, 3.023, 29, 2.518, 30, 3.023, 31,
          3.023, 32, 4.172, 33, 2.518, 34, 2.518, 35, 2.186, 36, 3.023, 37,
          3.023, 38, 1.101, 39, 3.023, 40, 2.044, 41, 3.023, 42, 3.023, 43,
          3.023, 44, 2.518, 45, 0.348, 46, 0.016, 47, 0.021, 48, 0.021,
        ],
      ],
      [
        "title/controllers/AuthenticationController.html",
        [49, 2.035, 50, 2.035],
      ],
      [
        "body/controllers/AuthenticationController.html",
        [
          12, 0.033, 20, 0.509, 21, 0.446, 22, 0.446, 25, 0.693, 27, 0.872, 35,
          3.196, 45, 0.509, 46, 0.023, 47, 0.027, 48, 0.027, 49, 3.421, 50,
          3.421, 51, 3.682, 52, 2.986, 53, 4.42, 54, 3.196, 55, 1.609,
        ],
      ],
      ["title/injectables/AuthenticationService.html", [52, 1.654, 56, 1.26]],
      [
        "body/injectables/AuthenticationService.html",
        [
          12, 0.032, 20, 0.535, 21, 0.469, 22, 0.469, 25, 0.604, 27, 0.916, 45,
          0.535, 46, 0.024, 47, 0.028, 48, 0.028, 52, 2.864, 56, 2.182, 57,
          2.674, 58, 3.871,
        ],
      ],
      ["title/classes/BasePublicUserDto.html", [46, 0.016, 59, 2.035]],
      [
        "body/classes/BasePublicUserDto.html",
        [
          12, 0.033, 20, 0.354, 21, 0.311, 22, 0.311, 25, 0.627, 40, 1.677, 45,
          0.354, 46, 0.025, 47, 0.022, 48, 0.022, 55, 2.231, 59, 2.709, 60,
          1.334, 61, 3.935, 62, 3.935, 63, 1.604, 64, 0.729, 65, 1.413, 66,
          2.287, 67, 1.482, 68, 2.284, 69, 3.489, 70, 1.331, 71, 1.891, 72,
          2.462, 73, 3.52, 74, 1.595, 75, 2.565, 76, 3.079, 77, 2.565, 78,
          3.079, 79, 1.83, 80, 2.565, 81, 2.565, 82, 2.226, 83, 1.121, 84,
          5.441, 85, 1.974, 86, 3.52, 87, 3.489, 88, 3.52, 89, 3.489, 90, 3.52,
          91, 1.772, 92, 2.565,
        ],
      ],
      ["title/classes/BaseUserDto.html", [46, 0.016, 93, 2.035]],
      [
        "body/classes/BaseUserDto.html",
        [
          12, 0.033, 20, 0.403, 21, 0.353, 22, 0.353, 25, 0.669, 40, 1.828, 45,
          0.403, 46, 0.026, 47, 0.024, 48, 0.024, 60, 1.517, 61, 3.956, 63,
          1.824, 64, 0.829, 65, 1.541, 66, 2.441, 67, 1.582, 68, 2.171, 70,
          1.346, 71, 1.992, 72, 2.441, 74, 1.582, 81, 2.917, 82, 2.532, 83,
          1.275, 85, 2.245, 87, 3.723, 89, 3.723, 90, 3.838, 91, 2.015, 92,
          2.917, 93, 2.953, 94, 3.301, 95, 3.332, 96, 3.502, 97, 3.502, 98,
          2.917,
        ],
      ],
      ["title/classes/BcryptProvider.html", [46, 0.016, 99, 1.654]],
      [
        "body/classes/BcryptProvider.html",
        [
          12, 0.033, 20, 0.2, 21, 0.175, 22, 0.175, 25, 0.509, 27, 0.342, 38,
          1.426, 40, 1.363, 45, 0.2, 46, 0.009, 47, 0.014, 48, 0.014, 55, 1.657,
          60, 0.752, 64, 0.411, 65, 0.923, 67, 0.848, 70, 0.654, 71, 2.033, 74,
          1.203, 99, 1.438, 100, 1.446, 101, 1.363, 102, 3.261, 103, 2.579, 104,
          3.443, 105, 3.986, 106, 4.871, 107, 2.51, 108, 3.78, 109, 2.76, 110,
          2.202, 111, 2.618, 112, 1.856, 113, 3.915, 114, 1.588, 115, 2.618,
          116, 3.78, 117, 1.588, 118, 1.588, 119, 2.76, 120, 1.736, 121, 2.76,
          122, 1.736, 123, 2.76, 124, 2.76, 125, 2.299, 126, 2.76, 127, 2.299,
          128, 3.58, 129, 1.736, 130, 1.438, 131, 1.438, 132, 1.851, 133, 2.935,
          134, 2.739, 135, 3.436, 136, 2.862, 137, 2.862, 138, 2.299, 139,
          1.736, 140, 1.769, 141, 2.299, 142, 2.299, 143, 2.76, 144, 1.736, 145,
          2.225, 146, 1.255, 147, 1.255, 148, 2.618, 149, 1.446, 150, 1.977,
          151, 2.484, 152, 3.436, 153, 3.436, 154, 2.76, 155, 3.436, 156, 1.736,
          157, 1.736, 158, 1.736, 159, 1.255, 160, 1.113, 161, 2.299, 162,
          1.438, 163, 1.996, 164, 1.736, 165, 2.299, 166, 2.76, 167, 2.76, 168,
          1.588, 169, 2.76, 170, 1.769, 171, 1.736, 172, 1.736, 173, 1.113, 174,
          2.76, 175, 1.736, 176, 1.736, 177, 1.736,
        ],
      ],
      ["title/modules/ConfigurationModule.html", [0, 0.626, 11, 1.827]],
      [
        "body/modules/ConfigurationModule.html",
        [
          0, 0.976, 2, 1.426, 11, 2.849, 12, 0.033, 20, 0.451, 21, 0.395, 22,
          0.395, 24, 3.174, 25, 0.765, 27, 0.772, 45, 0.451, 46, 0.02, 47,
          0.025, 48, 0.025, 146, 3.58, 147, 2.831, 159, 2.831, 178, 3.915, 179,
          4.951, 180, 3.262, 181, 2.831, 182, 3.58, 183, 3.915, 184, 3.58, 185,
          3.915, 186, 3.262, 187, 3.915, 188, 3.915, 189, 3.915, 190, 3.915,
          191, 3.915, 192, 3.915,
        ],
      ],
      ["title/classes/CreateUserDto.html", [46, 0.016, 193, 1.654]],
      [
        "body/classes/CreateUserDto.html",
        [
          12, 0.033, 20, 0.309, 21, 0.27, 22, 0.27, 25, 0.498, 40, 1.064, 45,
          0.309, 46, 0.028, 47, 0.02, 48, 0.02, 55, 1.63, 60, 1.161, 63, 1.396,
          64, 0.635, 65, 1.282, 66, 1.818, 67, 1.178, 68, 1.064, 70, 1.157, 71,
          1.779, 72, 2.316, 74, 1.501, 75, 2.233, 79, 1.661, 91, 1.543, 93,
          3.63, 94, 2.458, 95, 2.773, 98, 2.233, 101, 1.064, 104, 2.207, 168,
          3.186, 193, 1.997, 194, 3.194, 195, 3.194, 196, 3.194, 197, 2.207,
          198, 2.773, 199, 1.522, 200, 3.533, 201, 3.835, 202, 3.835, 203,
          3.835, 204, 3.835, 205, 3.835, 206, 2.681, 207, 4.886, 208, 3.835,
          209, 4.717, 210, 3.835, 211, 3.835, 212, 3.835, 213, 3.835, 214,
          3.835, 215, 3.835, 216, 3.194, 217, 3.835, 218, 3.835, 219, 3.835,
          220, 3.835, 221, 2.773, 222, 3.835, 223, 3.73, 224, 2.681, 225, 2.681,
          226, 2.681, 227, 2.233, 228, 1.718, 229, 3.835, 230, 2.681,
        ],
      ],
      [
        "title/interfaces/HashAlgorithmInterface.html",
        [110, 2.035, 231, 2.035],
      ],
      [
        "body/interfaces/HashAlgorithmInterface.html",
        [
          12, 0.032, 20, 0.422, 21, 0.37, 22, 0.37, 45, 0.422, 47, 0.024, 48,
          0.024, 64, 0.869, 67, 1.459, 70, 1.125, 71, 2.292, 74, 1.459, 104,
          2.733, 105, 3.809, 106, 4.806, 110, 3.045, 114, 2.733, 116, 3.435,
          127, 3.957, 128, 3.809, 130, 2.474, 131, 2.474, 132, 2.058, 133,
          3.205, 138, 3.957, 231, 2.352, 232, 3.67, 233, 4.388, 234, 3.057, 235,
          3.67, 236, 3.67,
        ],
      ],
      ["title/modules/IamModule.html", [0, 0.626, 13, 1.827]],
      [
        "body/modules/IamModule.html",
        [
          0, 1.017, 2, 1.28, 3, 1.522, 4, 1.83, 5, 1.83, 6, 1.522, 7, 2.686, 8,
          1.83, 12, 0.033, 13, 3.549, 16, 3.042, 17, 2.405, 18, 1.83, 19, 1.666,
          20, 0.404, 21, 0.355, 22, 0.355, 24, 2.96, 25, 0.739, 27, 0.693, 29,
          2.927, 35, 3.339, 45, 0.404, 46, 0.018, 47, 0.024, 48, 0.024, 50,
          3.306, 52, 3.042, 237, 2.927, 238, 2.927, 239, 2.927, 240, 3.361, 241,
          3.514, 242, 3.514, 243, 3.514, 244, 3.514,
        ],
      ],
      ["title/classes/LoginUserDto.html", [46, 0.016, 245, 2.296]],
      [
        "body/classes/LoginUserDto.html",
        [
          12, 0.032, 20, 0.502, 21, 0.44, 22, 0.44, 25, 0.688, 45, 0.502, 46,
          0.022, 47, 0.027, 48, 0.027, 60, 1.889, 63, 2.272, 67, 1.626, 94,
          3.393, 193, 2.272, 200, 3.828, 228, 2.796, 245, 3.828, 246, 3.633,
          247, 5.294, 248, 3.154, 249, 4.361, 250, 3.633,
        ],
      ],
      ["title/modules/PasswordModule.html", [0, 0.626, 240, 1.827]],
      [
        "body/modules/PasswordModule.html",
        [
          0, 1.056, 2, 1.382, 3, 1.644, 4, 1.977, 5, 1.977, 6, 1.644, 7, 2.788,
          8, 2.788, 12, 0.033, 17, 2.528, 18, 1.977, 19, 1.799, 20, 0.437, 21,
          0.383, 22, 0.383, 25, 0.696, 27, 0.749, 45, 0.437, 46, 0.02, 47,
          0.025, 48, 0.025, 99, 2.528, 240, 3.489, 251, 3.162, 252, 3.162, 253,
          3.162, 254, 3.639, 255, 3.796, 256, 3.162, 257, 3.796,
        ],
      ],
      ["title/injectables/PasswordService.html", [56, 1.26, 254, 1.827]],
      [
        "body/injectables/PasswordService.html",
        [
          12, 0.033, 20, 0.283, 21, 0.248, 22, 0.248, 25, 0.468, 27, 0.484, 45,
          0.283, 46, 0.013, 47, 0.019, 48, 0.019, 54, 1.776, 55, 0.894, 56,
          1.428, 57, 1.413, 64, 0.582, 67, 1.308, 70, 1.009, 71, 2.162, 74,
          1.308, 99, 2.443, 101, 1.428, 102, 2.998, 103, 1.874, 105, 3.392, 107,
          2.307, 108, 2.602, 114, 2.071, 115, 3.003, 116, 3.392, 128, 4.146,
          130, 2.219, 131, 2.219, 132, 2.032, 133, 3.003, 134, 3.007, 140,
          2.307, 142, 3.907, 148, 2.451, 149, 2.998, 162, 1.874, 163, 2.602,
          168, 3.494, 254, 2.071, 256, 2.046, 258, 2.046, 259, 4.26, 260, 3.599,
          261, 1.776, 262, 2.456, 263, 2.456, 264, 3.599, 265, 2.456, 266,
          4.993, 267, 2.456, 268, 4.69, 269, 3.599, 270, 3.599, 271, 3.599, 272,
          3.599, 273, 3.599, 274, 2.456, 275, 3.599, 276, 3.599, 277, 2.456,
          278, 2.456, 279, 2.456,
        ],
      ],
      ["title/classes/PublicUserDTO.html", [46, 0.016, 280, 2.296]],
      [
        "body/classes/PublicUserDTO.html",
        [
          12, 0.032, 20, 0.409, 21, 0.358, 22, 0.358, 25, 0.462, 40, 1.409, 45,
          0.409, 46, 0.018, 47, 0.024, 48, 0.024, 55, 2.205, 59, 3.826, 60,
          1.539, 62, 2.568, 63, 1.85, 64, 0.841, 65, 1.555, 66, 2.205, 67,
          1.428, 68, 2.058, 69, 3.363, 70, 1.303, 71, 1.693, 72, 2.608, 73,
          3.874, 74, 1.69, 77, 2.959, 79, 1.539, 80, 2.959, 200, 3.363, 223,
          4.583, 227, 2.959, 228, 2.277, 280, 3.363, 281, 2.959, 282, 3.552,
          283, 3.552, 284, 3.552, 285, 3.552,
        ],
      ],
      ["title/entities/Todo.html", [68, 1.26, 83, 1.156]],
      [
        "body/entities/Todo.html",
        [
          12, 0.033, 20, 0.302, 21, 0.265, 22, 0.265, 25, 0.575, 27, 0.518, 38,
          1.375, 45, 0.302, 46, 0.014, 47, 0.019, 48, 0.019, 55, 1.611, 64,
          0.622, 65, 1.263, 68, 1.92, 70, 1.265, 71, 1.762, 72, 2.531, 74, 1.69,
          79, 1.636, 83, 1.375, 101, 1.756, 111, 2.546, 112, 2.294, 117, 1.51,
          118, 1.51, 199, 2.276, 286, 1.682, 287, 4.691, 288, 1.898, 289, 4.424,
          290, 4.424, 291, 4.424, 292, 4.424, 293, 4.839, 294, 4.424, 295,
          2.186, 296, 4.271, 297, 2.186, 298, 3.776, 299, 2.186, 300, 2.186,
          301, 3.685, 302, 2.186, 303, 4.424, 304, 2.624, 305, 2.624, 306,
          3.776, 307, 2.624, 308, 3.685, 309, 3.685, 310, 3.685, 311, 3.776,
          312, 1.367, 313, 2.624, 314, 2.624, 315, 2.624, 316, 2.624, 317,
          3.685, 318, 4.424, 319, 2.624, 320, 2.624, 321, 2.186, 322, 2.186,
        ],
      ],
      ["title/modules/TodoModule.html", [0, 0.626, 14, 1.827]],
      [
        "body/modules/TodoModule.html",
        [
          0, 1.084, 2, 1.692, 12, 0.032, 14, 3.164, 20, 0.535, 21, 0.469, 22,
          0.469, 25, 0.604, 27, 0.916, 45, 0.535, 46, 0.024, 47, 0.028, 48,
          0.028, 323, 4.647,
        ],
      ],
      ["title/modules/TransactionsModule.html", [0, 0.626, 15, 1.654]],
      [
        "body/modules/TransactionsModule.html",
        [
          0, 1.067, 2, 1.414, 3, 1.683, 4, 2.023, 5, 2.023, 6, 1.683, 7, 2.818,
          8, 2.818, 12, 0.032, 15, 3.174, 17, 2.566, 18, 2.023, 19, 1.842, 20,
          0.447, 21, 0.392, 22, 0.392, 25, 0.64, 27, 0.766, 45, 0.447, 46, 0.02,
          47, 0.025, 48, 0.025, 324, 3.236, 325, 3.236, 326, 3.236, 327, 3.305,
          328, 3.885, 329, 3.885,
        ],
      ],
      ["title/injectables/TransactionsService.html", [56, 1.26, 327, 1.654]],
      [
        "body/injectables/TransactionsService.html",
        [
          12, 0.033, 20, 0.233, 21, 0.204, 22, 0.204, 25, 0.405, 27, 0.399, 38,
          1.948, 45, 0.233, 46, 0.016, 47, 0.016, 48, 0.016, 54, 1.465, 55,
          1.551, 56, 1.236, 57, 1.166, 64, 0.48, 65, 1.041, 66, 0.96, 67, 0.957,
          70, 0.899, 74, 1.165, 79, 0.877, 83, 1.948, 103, 1.976, 107, 1.298,
          111, 2.183, 112, 2.019, 114, 1.792, 115, 2.793, 117, 1.166, 118,
          1.166, 130, 1.976, 131, 1.622, 132, 1.349, 133, 2.793, 134, 1.996,
          140, 1.996, 145, 1.976, 148, 1.792, 150, 1.792, 151, 2.743, 161,
          1.687, 162, 2.218, 163, 2.252, 165, 1.687, 170, 2.432, 173, 1.298,
          193, 1.622, 198, 2.252, 199, 2.07, 221, 3.08, 248, 2.743, 261, 1.465,
          312, 1.055, 327, 1.622, 330, 1.687, 331, 3.794, 332, 2.026, 333,
          4.043, 334, 3.114, 335, 2.026, 336, 4.259, 337, 4.596, 338, 4.259,
          339, 2.026, 340, 2.026, 341, 2.594, 342, 3.829, 343, 2.594, 344,
          3.114, 345, 1.622, 346, 2.594, 347, 2.594, 348, 2.594, 349, 3.114,
          350, 3.114, 351, 4.259, 352, 2.252, 353, 3.114, 354, 3.161, 355,
          1.687, 356, 1.687, 357, 1.687, 358, 1.687, 359, 1.687, 360, 2.026,
          361, 2.026, 362, 2.026, 363, 2.026, 364, 2.026, 365, 2.026, 366,
          2.026, 367, 2.026, 368, 1.687, 369, 2.026, 370, 2.026, 371, 1.465,
          372, 1.687, 373, 2.026, 374, 3.114, 375, 2.026, 376, 3.114, 377,
          3.114, 378, 1.465, 379, 3.548, 380, 3.114, 381, 2.026, 382, 2.026,
          383, 2.026, 384, 2.026, 385, 1.687, 386, 2.026, 387, 2.026,
        ],
      ],
      ["title/entities/User.html", [83, 1.156, 199, 1.26]],
      [
        "body/entities/User.html",
        [
          12, 0.033, 20, 0.301, 21, 0.264, 22, 0.264, 25, 0.574, 27, 0.516, 38,
          1.608, 40, 1.496, 45, 0.301, 46, 0.013, 47, 0.019, 48, 0.019, 55,
          1.608, 64, 0.62, 65, 1.26, 66, 2.094, 67, 1.357, 68, 2.182, 69, 3.194,
          70, 1.213, 71, 1.943, 72, 2.428, 74, 1.639, 79, 1.913, 82, 1.893, 83,
          1.372, 94, 2.831, 111, 2.542, 112, 2.291, 117, 1.506, 118, 1.506, 168,
          2.542, 199, 2.033, 286, 1.678, 288, 1.893, 295, 2.18, 296, 4.444, 297,
          2.18, 299, 2.18, 300, 2.18, 301, 3.68, 302, 2.18, 308, 3.68, 309,
          3.68, 310, 3.68, 312, 1.363, 317, 2.18, 322, 2.18, 352, 1.893, 368,
          2.18, 388, 4.58, 389, 2.617, 390, 3.769, 391, 3.14, 392, 2.617, 393,
          2.617, 394, 3.769, 395, 3.769, 396, 3.769, 397, 3.769, 398, 2.617,
          399, 4.417, 400, 3.769, 401, 2.617, 402, 2.617, 403, 1.893, 404,
          2.617, 405, 2.617,
        ],
      ],
      ["title/injectables/UserService.html", [56, 1.26, 345, 1.654]],
      [
        "body/injectables/UserService.html",
        [
          12, 0.033, 20, 0.322, 21, 0.283, 22, 0.283, 25, 0.683, 27, 0.552, 38,
          1.815, 45, 0.322, 46, 0.014, 47, 0.02, 48, 0.02, 55, 1.02, 56, 1.57,
          57, 1.612, 64, 0.664, 66, 1.328, 67, 1.215, 70, 0.937, 74, 1.215, 79,
          1.214, 83, 1.67, 101, 1.112, 104, 2.277, 111, 1.612, 112, 1.328, 114,
          2.277, 115, 2.64, 130, 2.061, 131, 2.061, 132, 1.714, 133, 2.868, 134,
          2.536, 140, 2.536, 145, 2.061, 148, 1.612, 150, 2.277, 162, 1.459,
          193, 2.596, 195, 3.296, 196, 3.296, 197, 2.277, 198, 2.026, 199,
          2.311, 228, 1.796, 261, 2.861, 312, 1.459, 327, 2.596, 333, 3.296,
          341, 3.296, 342, 3.296, 343, 3.296, 345, 2.061, 346, 3.296, 347,
          2.334, 348, 3.821, 352, 3.604, 354, 3.296, 355, 2.334, 356, 2.334,
          357, 2.334, 358, 2.334, 359, 2.334, 406, 2.334, 407, 3.957, 408,
          2.801, 409, 2.801, 410, 3.957, 411, 2.801, 412, 2.801, 413, 2.334,
          414, 2.801, 415, 2.801, 416, 2.801,
        ],
      ],
      ["title/modules/UsersModule.html", [0, 0.626, 16, 1.654]],
      [
        "body/modules/UsersModule.html",
        [
          0, 1.015, 2, 1.275, 3, 1.517, 4, 1.824, 5, 1.824, 6, 1.517, 7, 2.682,
          8, 2.682, 12, 0.033, 15, 3.039, 16, 3.181, 17, 2.4, 18, 1.824, 19,
          1.66, 20, 0.403, 21, 0.353, 22, 0.353, 24, 2.953, 25, 0.739, 27,
          0.691, 34, 2.917, 45, 0.403, 46, 0.018, 47, 0.024, 48, 0.024, 83,
          1.275, 180, 2.917, 181, 2.532, 199, 1.39, 345, 3.256, 413, 2.917, 417,
          2.917, 418, 2.917, 419, 2.917, 420, 3.502, 421, 3.502, 422, 3.502,
          423, 3.502,
        ],
      ],
      ["title/classes/ValidateEnvironment.html", [46, 0.016, 424, 2.035]],
      [
        "body/classes/ValidateEnvironment.html",
        [
          12, 0.033, 20, 0.186, 21, 0.163, 22, 0.163, 25, 0.425, 27, 0.318, 38,
          0.947, 40, 0.64, 44, 1.343, 45, 0.299, 46, 0.023, 47, 0.013, 48,
          0.013, 60, 0.698, 64, 0.382, 65, 0.87, 70, 1.344, 71, 2.202, 72,
          2.689, 74, 1.742, 79, 1.907, 85, 1.033, 86, 3.126, 87, 4.018, 88,
          3.126, 89, 4.018, 91, 0.928, 95, 3.968, 99, 0.84, 101, 0.64, 103,
          0.84, 112, 1.233, 132, 1.127, 136, 1.343, 145, 1.703, 148, 0.928, 150,
          0.928, 159, 1.166, 160, 2.096, 162, 0.84, 170, 1.033, 173, 2.096, 186,
          2.724, 197, 2.159, 321, 1.343, 371, 2.365, 378, 1.166, 379, 1.343,
          424, 2.096, 425, 4.138, 426, 1.166, 427, 2.601, 428, 1.881, 429,
          2.601, 430, 2.724, 431, 2.724, 432, 2.365, 433, 1.881, 434, 2.724,
          435, 3.27, 436, 2.601, 437, 3.27, 438, 2.724, 439, 3.27, 440, 3.27,
          441, 3.27, 442, 3.27, 443, 3.27, 444, 3.27, 445, 3.27, 446, 3.27, 447,
          3.27, 448, 3.27, 449, 3.27, 450, 3.27, 451, 3.27, 452, 3.27, 453,
          3.27, 454, 3.27, 455, 1.612, 456, 1.612, 457, 1.612, 458, 1.612, 459,
          1.612, 460, 1.612, 461, 1.612, 462, 1.612, 463, 1.612, 464, 1.612,
          465, 1.612, 466, 1.612, 467, 1.612, 468, 1.612, 469, 1.612, 470,
          1.612, 471, 1.612, 472, 1.612, 473, 1.612, 474, 1.343, 475, 1.612,
          476, 1.343, 477, 2.714, 478, 1.166, 479, 1.343, 480, 1.343, 481,
          1.343, 482, 3.667, 483, 1.881, 484, 1.343, 485, 1.343, 486, 1.612,
          487, 1.612, 488, 1.612, 489, 1.612, 490, 1.612, 491, 1.343, 492,
          1.612, 493, 1.612, 494, 1.612, 495, 1.612,
        ],
      ],
      ["title/coverage.html", [496, 3.12]],
      [
        "body/coverage.html",
        [
          0, 0.551, 6, 1.21, 12, 0.033, 22, 0.282, 38, 1.017, 46, 0.029, 47,
          0.02, 48, 0.02, 49, 1.791, 50, 1.791, 51, 2.327, 52, 1.455, 56, 1.975,
          58, 2.327, 59, 1.791, 61, 2.855, 62, 2.02, 63, 2.735, 68, 1.109, 70,
          0.662, 83, 1.438, 93, 1.791, 99, 1.455, 100, 2.327, 110, 1.791, 182,
          2.02, 184, 2.02, 193, 1.455, 194, 2.327, 199, 1.109, 231, 1.791, 233,
          2.327, 234, 2.327, 245, 2.02, 246, 2.327, 254, 1.608, 258, 2.327, 280,
          2.02, 281, 2.327, 287, 2.327, 288, 2.855, 327, 1.455, 330, 2.327, 345,
          1.455, 388, 2.327, 391, 2.327, 406, 2.327, 424, 1.791, 425, 2.855,
          426, 2.855, 484, 3.29, 491, 5.019, 496, 2.02, 497, 2.02, 498, 2.794,
          499, 2.794, 500, 4.147, 501, 5.451, 502, 2.327, 503, 5.252, 504,
          5.252, 505, 2.327, 506, 2.327, 507, 2.794, 508, 2.794, 509, 2.327,
          510, 2.327, 511, 5.724, 512, 2.794, 513, 2.794, 514, 2.794, 515,
          2.794, 516, 2.794, 517, 2.855, 518, 2.794, 519, 2.794, 520, 3.949,
          521, 2.794, 522, 2.794, 523, 2.794, 524, 2.794, 525, 2.794, 526,
          2.794,
        ],
      ],
      ["title/dependencies.html", [3, 1.652, 527, 2.216]],
      [
        "body/dependencies.html",
        [
          3, 1.491, 12, 0.033, 27, 0.679, 33, 2.867, 46, 0.023, 47, 0.023, 48,
          0.023, 85, 2.206, 91, 1.98, 108, 2.488, 147, 2.488, 181, 2.488, 250,
          2.867, 312, 1.792, 432, 2.488, 434, 2.867, 528, 3.441, 529, 3.441,
          530, 5.105, 531, 3.441, 532, 3.441, 533, 3.794, 534, 3.441, 535,
          3.441, 536, 3.441, 537, 3.441, 538, 3.441, 539, 3.441, 540, 3.441,
          541, 3.441, 542, 3.441, 543, 3.441, 544, 5.807, 545, 5.105, 546,
          3.441, 547, 3.441, 548, 3.441, 549, 3.441, 550, 3.441, 551, 4.554,
          552, 2.867, 553, 3.441, 554, 3.441, 555, 3.441, 556, 3.441, 557,
          3.441, 558, 3.441, 559, 3.441, 560, 3.441, 561, 3.441, 562, 3.441,
          563, 3.441, 564, 3.441, 565, 3.441, 566, 3.441, 567, 3.441, 568,
          3.441, 569, 3.441,
        ],
      ],
      ["title/miscellaneous/functions.html", [570, 1.705, 571, 3.177]],
      [
        "body/miscellaneous/functions.html",
        [
          6, 2.396, 12, 0.028, 46, 0.021, 47, 0.026, 48, 0.026, 64, 0.965, 67,
          1.252, 70, 0.965, 101, 1.617, 103, 2.123, 130, 2.123, 131, 2.123, 132,
          1.765, 145, 2.123, 150, 2.345, 160, 2.612, 184, 3.672, 197, 3.183,
          371, 3.672, 378, 3.672, 424, 2.612, 425, 2.947, 426, 3.672, 476,
          3.395, 477, 3.999, 478, 2.947, 479, 3.395, 480, 3.395, 481, 3.395,
          482, 4.23, 483, 2.947, 485, 3.395, 517, 2.947, 570, 2.612, 571, 3.395,
          572, 3.395, 573, 4.076,
        ],
      ],
      ["title/index.html", [64, 0.63, 574, 2.216, 575, 2.216]],
      [
        "body/index.html",
        [
          12, 0.031, 21, 0.253, 38, 0.915, 47, 0.019, 48, 0.019, 68, 0.997, 101,
          0.997, 104, 2.105, 125, 2.092, 151, 2.645, 160, 1.61, 199, 2.154, 216,
          2.092, 221, 3.12, 248, 1.816, 385, 2.092, 403, 3.926, 433, 2.645, 496,
          1.816, 552, 4.381, 576, 4.741, 577, 2.092, 578, 2.511, 579, 2.511,
          580, 2.511, 581, 2.511, 582, 2.511, 583, 2.511, 584, 2.511, 585,
          2.511, 586, 3.803, 587, 3.658, 588, 3.048, 589, 3.595, 590, 3.048,
          591, 3.048, 592, 2.092, 593, 2.511, 594, 2.511, 595, 2.511, 596,
          5.764, 597, 4.741, 598, 2.511, 599, 3.658, 600, 2.511, 601, 3.658,
          602, 4.315, 603, 2.511, 604, 2.511, 605, 2.511, 606, 2.511, 607,
          3.658, 608, 2.511, 609, 2.511, 610, 2.511, 611, 2.511, 612, 2.511,
          613, 3.658, 614, 2.511, 615, 3.658, 616, 3.658, 617, 3.658, 618,
          3.658, 619, 2.511, 620, 2.092, 621, 2.511, 622, 2.511, 623, 2.511,
          624, 2.511, 625, 2.511, 626, 2.511, 627, 2.511, 628, 2.511, 629,
          2.511, 630, 2.511, 631, 3.048, 632, 2.511, 633, 2.511, 634, 2.511,
          635, 2.511, 636, 2.511, 637, 5.429, 638, 2.511, 639, 2.511, 640,
          2.511, 641, 2.511, 642, 3.658, 643, 2.511, 644, 2.511, 645, 2.511,
          646, 3.658, 647, 2.511, 648, 2.511, 649, 2.511, 650, 3.658, 651,
          2.345, 652, 3.658, 653, 2.511, 654, 2.511, 655, 2.511, 656, 2.511,
          657, 2.092, 658, 2.511, 659, 2.511, 660, 2.511, 661, 2.511, 662,
          2.511, 663, 2.511, 664, 2.511, 665, 2.511, 666, 2.511, 667, 2.511,
          668, 2.092, 669, 1.816, 670, 1.816, 671, 2.511, 672, 2.511, 673, 1.61,
        ],
      ],
      ["title/license.html", [574, 2.216, 575, 2.216, 673, 1.705]],
      [
        "body/license.html",
        [
          12, 0.023, 19, 1.62, 47, 0.023, 48, 0.023, 103, 1.78, 137, 2.847, 497,
          2.471, 533, 2.847, 620, 2.847, 631, 3.777, 651, 2.191, 669, 2.471,
          670, 2.471, 673, 2.191, 674, 5.087, 675, 3.417, 676, 3.417, 677,
          4.534, 678, 3.417, 679, 3.417, 680, 3.417, 681, 3.417, 682, 3.417,
          683, 3.417, 684, 4.534, 685, 6.078, 686, 3.417, 687, 3.417, 688,
          3.417, 689, 5.087, 690, 3.417, 691, 4.534, 692, 3.417, 693, 3.417,
          694, 3.417, 695, 3.417, 696, 3.417, 697, 3.417, 698, 3.417, 699,
          3.417, 700, 3.417, 701, 4.534, 702, 3.417, 703, 3.417, 704, 3.417,
          705, 3.417, 706, 3.417, 707, 3.417, 708, 4.534, 709, 4.534, 710,
          3.417, 711, 3.417, 712, 3.417, 713, 3.417, 714, 3.417, 715, 3.417,
          716, 3.417, 717, 3.417, 718, 3.417, 719, 3.417, 720, 3.417, 721,
          3.417, 722, 3.417, 723, 3.417, 724, 3.417, 725, 3.417, 726, 3.417,
          727, 3.417, 728, 3.417, 729, 3.417, 730, 3.417, 731, 3.417, 732,
          3.417, 733, 3.417, 734, 3.417, 735, 3.417, 736, 3.417,
        ],
      ],
      ["title/modules.html", [2, 1.571]],
      [
        "body/modules.html",
        [
          1, 2.748, 2, 1.561, 11, 2.466, 12, 0.027, 13, 2.466, 14, 2.466, 15,
          2.232, 16, 2.232, 47, 0.027, 48, 0.027, 240, 2.466, 657, 5.034, 737,
          6.043, 738, 6.043, 739, 6.225, 740, 5.238, 741, 5.238,
        ],
      ],
      ["title/overview.html", [742, 3.595]],
      [
        "body/overview.html",
        [
          0, 0.605, 1, 3.925, 2, 1.118, 3, 1.33, 4, 1.599, 5, 1.599, 6, 1.33, 7,
          1.599, 8, 1.599, 9, 2.557, 10, 2.557, 11, 2.772, 12, 0.032, 13, 3.421,
          14, 2.772, 15, 2.996, 16, 3.096, 17, 2.196, 18, 1.599, 19, 1.455, 47,
          0.022, 48, 0.022, 49, 1.968, 52, 2.509, 57, 1.766, 60, 1.33, 209,
          3.513, 231, 1.968, 237, 2.557, 238, 2.557, 239, 2.557, 240, 3.231,
          251, 2.557, 252, 2.557, 253, 2.557, 254, 3.31, 286, 1.968, 324, 2.557,
          325, 2.557, 326, 2.557, 327, 2.996, 345, 2.996, 417, 2.557, 418,
          2.557, 419, 2.557, 742, 2.557, 743, 4.217, 744, 3.069, 745, 3.069,
        ],
      ],
      ["title/properties.html", [65, 1.275, 527, 2.216]],
      [
        "body/properties.html",
        [
          12, 0.032, 47, 0.028, 48, 0.028, 65, 1.512, 101, 1.794, 403, 3.269,
          586, 3.269, 588, 3.765, 589, 3.765, 590, 3.765, 591, 3.765, 592,
          3.765, 651, 2.897, 668, 3.765, 669, 3.269, 670, 3.269, 673, 2.897,
          746, 4.52, 747, 4.52, 748, 4.52,
        ],
      ],
      ["title/miscellaneous/variables.html", [428, 2.758, 570, 1.705]],
      [
        "body/miscellaneous/variables.html",
        [
          0, 0.796, 12, 0.033, 38, 1.469, 40, 1.601, 47, 0.017, 48, 0.017, 64,
          0.531, 70, 1.062, 107, 1.436, 112, 1.062, 115, 1.289, 117, 2.765, 118,
          2.765, 132, 0.97, 141, 1.866, 145, 1.167, 146, 3.893, 162, 2.102, 168,
          2.322, 170, 1.436, 173, 1.436, 182, 2.431, 197, 1.289, 286, 2.155,
          312, 2.102, 372, 3.736, 428, 1.62, 430, 2.8, 431, 2.8, 432, 2.918,
          433, 3.784, 438, 2.8, 474, 3.361, 477, 3.475, 478, 1.62, 483, 3.243,
          497, 2.431, 500, 1.866, 502, 2.8, 505, 2.8, 506, 2.8, 509, 1.866, 510,
          2.8, 517, 1.62, 570, 1.436, 572, 1.866, 577, 1.866, 586, 2.431, 651,
          1.436, 749, 4.484, 750, 2.24, 751, 4.035, 752, 4.484, 753, 2.24, 754,
          4.035, 755, 2.24, 756, 2.24, 757, 4.035, 758, 2.24, 759, 2.24, 760,
          2.24, 761, 3.362, 762, 3.362, 763, 3.362, 764, 2.24, 765, 4.035, 766,
          2.24, 767, 2.24, 768, 2.24, 769, 2.24, 770, 2.24, 771, 2.24, 772,
          2.24, 773, 2.24, 774, 2.24, 775, 2.24, 776, 2.24, 777, 3.362, 778,
          2.24, 779, 2.24, 780, 2.24, 781, 2.24, 782, 2.24, 783, 2.24, 784,
          2.24, 785, 2.24, 786, 2.24, 787, 2.24, 788, 4.035, 789, 4.035, 790,
          4.035, 791, 2.24, 792, 2.24, 793, 2.24, 794, 2.24, 795, 2.24, 796,
          2.24, 797, 4.035, 798, 2.24, 799, 2.24, 800, 2.24, 801, 2.24, 802,
          2.24, 803, 2.24, 804, 2.24, 805, 2.24, 806, 2.24, 807, 2.24, 808,
          2.24, 809, 2.24, 810, 2.24, 811, 2.24,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 12,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 491,
          title: {},
          body: { "classes/ValidateEnvironment.html": {}, "coverage.html": {} },
        },
      ],
      ["0.0.1", { _index: 747, title: {}, body: { "properties.html": {} } }],
      ["0.14.1", { _index: 538, title: {}, body: { "dependencies.html": {} } }],
      ["0.2.0", { _index: 551, title: {}, body: { "dependencies.html": {} } }],
      ["0.3.20", { _index: 562, title: {}, body: { "dependencies.html": {} } }],
      ["0.5.1", { _index: 537, title: {}, body: { "dependencies.html": {} } }],
      ["0/1", { _index: 511, title: {}, body: { "coverage.html": {} } }],
      ["0/3", { _index: 514, title: {}, body: { "coverage.html": {} } }],
      ["0/4", { _index: 521, title: {}, body: { "coverage.html": {} } }],
      ["0/5", { _index: 520, title: {}, body: { "coverage.html": {} } }],
      [
        "1",
        {
          _index: 209,
          title: {},
          body: { "classes/CreateUserDto.html": {}, "overview.html": {} },
        },
      ],
      [
        "1.0",
        {
          _index: 806,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["1.1.25", { _index: 529, title: {}, body: { "dependencies.html": {} } }],
      [
        "1.200.3",
        { _index: 557, title: {}, body: { "dependencies.html": {} } },
      ],
      ["1/1", { _index: 504, title: {}, body: { "coverage.html": {} } }],
      ["1/18", { _index: 508, title: {}, body: { "coverage.html": {} } }],
      ["1/3", { _index: 525, title: {}, body: { "coverage.html": {} } }],
      ["1/4", { _index: 519, title: {}, body: { "coverage.html": {} } }],
      ["1/5", { _index: 523, title: {}, body: { "coverage.html": {} } }],
      ["10.0.0", { _index: 530, title: {}, body: { "dependencies.html": {} } }],
      ["10.0.2", { _index: 535, title: {}, body: { "dependencies.html": {} } }],
      ["100", { _index: 503, title: {}, body: { "coverage.html": {} } }],
      ["16.4.5", { _index: 540, title: {}, body: { "dependencies.html": {} } }],
      ["2", { _index: 744, title: {}, body: { "overview.html": {} } }],
      ["2/4", { _index: 516, title: {}, body: { "coverage.html": {} } }],
      ["20", { _index: 522, title: {}, body: { "coverage.html": {} } }],
      ["2024", { _index: 676, title: {}, body: { "license.html": {} } }],
      [
        "23505",
        {
          _index: 374,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      ["25", { _index: 518, title: {}, body: { "coverage.html": {} } }],
      ["3.0.0", { _index: 569, title: {}, body: { "dependencies.html": {} } }],
      ["3.2.3", { _index: 531, title: {}, body: { "dependencies.html": {} } }],
      ["33", { _index: 524, title: {}, body: { "coverage.html": {} } }],
      ["37.6.1", { _index: 563, title: {}, body: { "dependencies.html": {} } }],
      ["4", { _index: 745, title: {}, body: { "overview.html": {} } }],
      ["4/5", { _index: 513, title: {}, body: { "coverage.html": {} } }],
      ["5", { _index: 507, title: {}, body: { "coverage.html": {} } }],
      ["5.0.1", { _index: 559, title: {}, body: { "dependencies.html": {} } }],
      ["5.1.1", { _index: 536, title: {}, body: { "dependencies.html": {} } }],
      ["5.1.4", { _index: 566, title: {}, body: { "dependencies.html": {} } }],
      ["5.3.10", { _index: 561, title: {}, body: { "dependencies.html": {} } }],
      ["5.95.0", { _index: 564, title: {}, body: { "dependencies.html": {} } }],
      ["50", { _index: 515, title: {}, body: { "coverage.html": {} } }],
      ["7", { _index: 743, title: {}, body: { "overview.html": {} } }],
      ["7.4.2", { _index: 534, title: {}, body: { "dependencies.html": {} } }],
      ["7.8.1", { _index: 555, title: {}, body: { "dependencies.html": {} } }],
      [
        "8",
        { _index: 207, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      ["8.13.0", { _index: 548, title: {}, body: { "dependencies.html": {} } }],
      ["80", { _index: 512, title: {}, body: { "coverage.html": {} } }],
      ["9.0.2", { _index: 546, title: {}, body: { "dependencies.html": {} } }],
      ["above", { _index: 707, title: {}, body: { "license.html": {} } }],
      ["access", { _index: 629, title: {}, body: { "index.html": {} } }],
      [
        "accordingly",
        {
          _index: 781,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["action", { _index: 731, title: {}, body: { "license.html": {} } }],
      [
        "adding",
        {
          _index: 343,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "addserver(process.env.swagger_add_svr",
        {
          _index: 807,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "adjust",
        {
          _index: 779,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "afterinsert",
        {
          _index: 308,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "afterremove",
        {
          _index: 309,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "afterupdate",
        {
          _index: 310,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "against",
        {
          _index: 149,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "algorithm",
        {
          _index: 276,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "algorithm.interface",
        { _index: 144, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "algorithm.interface.ts",
        {
          _index: 234,
          title: {},
          body: {
            "interfaces/HashAlgorithmInterface.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "algorithm.interface.ts:2",
        {
          _index: 236,
          title: {},
          body: { "interfaces/HashAlgorithmInterface.html": {} },
        },
      ],
      [
        "algorithm.interface.ts:3",
        {
          _index: 235,
          title: {},
          body: { "interfaces/HashAlgorithmInterface.html": {} },
        },
      ],
      [
        "allow",
        {
          _index: 590,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "already",
        {
          _index: 357,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["amazing", { _index: 658, title: {}, body: { "index.html": {} } }],
      ["and/or", { _index: 699, title: {}, body: { "license.html": {} } }],
      [
        "api",
        {
          _index: 586,
          title: {},
          body: {
            "index.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "app",
        {
          _index: 125,
          title: {},
          body: { "classes/BcryptProvider.html": {}, "index.html": {} },
        },
      ],
      [
        "app_pipe",
        { _index: 32, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "app_port",
        {
          _index: 437,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "application",
        {
          _index: 435,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      ["applications", { _index: 585, title: {}, body: { "index.html": {} } }],
      [
        "appmodule",
        {
          _index: 1,
          title: { "modules/AppModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "appropriate",
        {
          _index: 800,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["arising", { _index: 734, title: {}, body: { "license.html": {} } }],
      ["associated", { _index: 686, title: {}, body: { "license.html": {} } }],
      [
        "async",
        {
          _index: 115,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "asynchronously",
        {
          _index: 140,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["auth", { _index: 748, title: {}, body: { "properties.html": {} } }],
      ["authenticate", { _index: 625, title: {}, body: { "index.html": {} } }],
      [
        "authentication",
        { _index: 597, title: {}, body: { "index.html": {} } },
      ],
      [
        "authentication.service",
        {
          _index: 53,
          title: {},
          body: { "controllers/AuthenticationController.html": {} },
        },
      ],
      [
        "authentication/authentication.controller",
        { _index: 243, title: {}, body: { "modules/IamModule.html": {} } },
      ],
      [
        "authentication/authentication.service",
        { _index: 244, title: {}, body: { "modules/IamModule.html": {} } },
      ],
      [
        "authenticationcontroller",
        {
          _index: 50,
          title: { "controllers/AuthenticationController.html": {} },
          body: {
            "controllers/AuthenticationController.html": {},
            "modules/IamModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "authenticationservice",
        {
          _index: 52,
          title: { "injectables/AuthenticationService.html": {} },
          body: {
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "modules/IamModule.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "author",
        {
          _index: 668,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["authorized", { _index: 628, title: {}, body: { "index.html": {} } }],
      ["authors", { _index: 724, title: {}, body: { "license.html": {} } }],
      ["available", { _index: 741, title: {}, body: { "modules.html": {} } }],
      [
        "await",
        {
          _index: 163,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
          },
        },
      ],
      [
        "aws",
        {
          _index: 430,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["backend", { _index: 593, title: {}, body: { "index.html": {} } }],
      ["backers", { _index: 659, title: {}, body: { "index.html": {} } }],
      [
        "base",
        {
          _index: 227,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
          },
        },
      ],
      [
        "based",
        {
          _index: 478,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "basepublicuserdto",
        {
          _index: 59,
          title: { "classes/BasePublicUserDto.html": {} },
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "basepublicuserdto:15",
        { _index: 285, title: {}, body: { "classes/PublicUserDTO.html": {} } },
      ],
      [
        "basepublicuserdto:19",
        { _index: 283, title: {}, body: { "classes/PublicUserDTO.html": {} } },
      ],
      [
        "basepublicuserdto:23",
        { _index: 282, title: {}, body: { "classes/PublicUserDTO.html": {} } },
      ],
      [
        "basepublicuserdto:27",
        { _index: 284, title: {}, body: { "classes/PublicUserDTO.html": {} } },
      ],
      [
        "baseuserdto",
        {
          _index: 93,
          title: { "classes/BaseUserDto.html": {} },
          body: {
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "baseuserdto:11",
        { _index: 224, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "baseuserdto:15",
        { _index: 226, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "baseuserdto:8",
        { _index: 225, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "bcrypt",
        {
          _index: 108,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "bcrypt.compare(data",
        { _index: 164, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "bcrypt.gensalt(this.saltround",
        { _index: 175, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "bcrypt.hashsync(data",
        { _index: 176, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "bcryptprovider",
        {
          _index: 99,
          title: { "classes/BcryptProvider.html": {} },
          body: {
            "classes/BcryptProvider.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "boolean",
        {
          _index: 269,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "bootstrap",
        {
          _index: 6,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "overview.html": {},
          },
        },
      ],
      ["browse", { _index: 739, title: {}, body: { "modules.html": {} } }],
      ["browser", { _index: 737, title: {}, body: { "modules.html": {} } }],
      [
        "buffer",
        {
          _index: 128,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "build",
        {
          _index: 811,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["building", { _index: 581, title: {}, body: { "index.html": {} } }],
      ["c", { _index: 675, title: {}, body: { "license.html": {} } }],
      [
        "ca",
        {
          _index: 777,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cascade",
        { _index: 396, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "catch",
        {
          _index: 165,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
          },
        },
      ],
      [
        "character",
        { _index: 220, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "characters",
        { _index: 214, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      ["charge", { _index: 681, title: {}, body: { "license.html": {} } }],
      [
        "check",
        {
          _index: 796,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "checker",
        { _index: 543, title: {}, body: { "dependencies.html": {} } },
      ],
      ["choice", { _index: 633, title: {}, body: { "index.html": {} } }],
      ["claim", { _index: 727, title: {}, body: { "license.html": {} } }],
      [
        "class",
        {
          _index: 46,
          title: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "classes/ValidateEnvironment.html": {},
          },
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "classes",
        {
          _index: 60,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "classes/ValidateEnvironment.html": {},
            "overview.html": {},
          },
        },
      ],
      ["cli", { _index: 565, title: {}, body: { "dependencies.html": {} } }],
      [
        "cluster_appmodule",
        {
          _index: 9,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_imports",
        {
          _index: 10,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_iammodule",
        {
          _index: 237,
          title: {},
          body: { "modules/IamModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_iammodule_imports",
        {
          _index: 238,
          title: {},
          body: { "modules/IamModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_iammodule_providers",
        {
          _index: 239,
          title: {},
          body: { "modules/IamModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_passwordmodule",
        {
          _index: 251,
          title: {},
          body: { "modules/PasswordModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_passwordmodule_exports",
        {
          _index: 252,
          title: {},
          body: { "modules/PasswordModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_passwordmodule_providers",
        {
          _index: 253,
          title: {},
          body: { "modules/PasswordModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_transactionsmodule",
        {
          _index: 324,
          title: {},
          body: { "modules/TransactionsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_transactionsmodule_exports",
        {
          _index: 325,
          title: {},
          body: { "modules/TransactionsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_transactionsmodule_providers",
        {
          _index: 326,
          title: {},
          body: { "modules/TransactionsModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usersmodule",
        {
          _index: 417,
          title: {},
          body: { "modules/UsersModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usersmodule_exports",
        {
          _index: 419,
          title: {},
          body: { "modules/UsersModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_usersmodule_imports",
        { _index: 420, title: {}, body: { "modules/UsersModule.html": {} } },
      ],
      [
        "cluster_usersmodule_providers",
        {
          _index: 418,
          title: {},
          body: { "modules/UsersModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "code",
        {
          _index: 373,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "column",
        {
          _index: 296,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "column({unique",
        { _index: 389, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "compare",
        {
          _index: 116,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "compare(data",
        {
          _index: 127,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
          },
        },
      ],
      [
        "comparepassword",
        {
          _index: 259,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "comparepassword(providedpassword",
        {
          _index: 265,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "compares",
        {
          _index: 102,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "comparison",
        { _index: 154, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "compodoc/compodoc",
        { _index: 528, title: {}, body: { "dependencies.html": {} } },
      ],
      ["conditions", { _index: 706, title: {}, body: { "license.html": {} } }],
      [
        "config",
        {
          _index: 483,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "configmodule",
        {
          _index: 179,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "configmodule.forroot",
        {
          _index: 187,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "configservice",
        {
          _index: 146,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        'configservice.get("db_engine',
        {
          _index: 788,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("datasource_database',
        {
          _index: 756,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("datasource_host',
        {
          _index: 753,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("datasource_password',
        {
          _index: 759,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("datasource_port',
        {
          _index: 755,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("datasource_username',
        {
          _index: 758,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("db_host',
        {
          _index: 767,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("db_name',
        {
          _index: 769,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("db_password',
        {
          _index: 771,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("db_port',
        {
          _index: 768,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("db_user',
        {
          _index: 770,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("postgres_database',
        {
          _index: 784,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("postgres_host',
        {
          _index: 785,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("postgres_password',
        {
          _index: 783,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("postgres_url',
        {
          _index: 772,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'configservice.getorthrow("postgres_user',
        {
          _index: 782,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "configuration",
        {
          _index: 477,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "configuration/configuration.module",
        { _index: 28, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "configurationmodule",
        {
          _index: 11,
          title: { "modules/ConfigurationModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/ConfigurationModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "conflict",
        {
          _index: 377,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "conflictexception",
        {
          _index: 354,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "connecting",
        {
          _index: 762,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["connection", { _index: 735, title: {}, body: { "license.html": {} } }],
      [
        "const",
        {
          _index: 173,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "constraint",
        {
          _index: 369,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "constructor",
        {
          _index: 261,
          title: {},
          body: {
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "constructor(datasource",
        {
          _index: 332,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "constructor(hashalgorithm",
        {
          _index: 262,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "constructor(private",
        {
          _index: 54,
          title: {},
          body: {
            "controllers/AuthenticationController.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
          },
        },
      ],
      [
        "constructor(transactionservice",
        {
          _index: 408,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "container",
        {
          _index: 766,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "contains",
        { _index: 201, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      ["contract", { _index: 732, title: {}, body: { "license.html": {} } }],
      [
        "controller",
        {
          _index: 49,
          title: { "controllers/AuthenticationController.html": {} },
          body: {
            "controllers/AuthenticationController.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "controllers",
        {
          _index: 35,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "modules/IamModule.html": {},
          },
        },
      ],
      ["copies", { _index: 701, title: {}, body: { "license.html": {} } }],
      ["copy", { _index: 684, title: {}, body: { "license.html": {} } }],
      ["copyright", { _index: 674, title: {}, body: { "license.html": {} } }],
      [
        "coverage",
        {
          _index: 496,
          title: { "coverage.html": {} },
          body: { "coverage.html": {}, "index.html": {} },
        },
      ],
      [
        "create",
        {
          _index: 248,
          title: {},
          body: {
            "classes/LoginUserDto.html": {},
            "injectables/TransactionsService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "created",
        {
          _index: 352,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "createdat",
        { _index: 289, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "createdatecolumn",
        { _index: 294, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "createentity",
        {
          _index: 331,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "createentity(entityclass",
        {
          _index: 335,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "creates",
        {
          _index: 341,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "createtransaction",
        {
          _index: 407,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "createtransaction(newuser",
        {
          _index: 346,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "createuserdto",
        {
          _index: 193,
          title: { "classes/CreateUserDto.html": {} },
          body: {
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "creating",
        {
          _index: 198,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "criteria",
        { _index: 205, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      ["crud", { _index: 615, title: {}, body: { "index.html": {} } }],
      ["damages", { _index: 728, title: {}, body: { "license.html": {} } }],
      [
        "data",
        {
          _index: 104,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/UserService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "database",
        {
          _index: 433,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "database/database.config",
        {
          _index: 183,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      ["databases", { _index: 614, title: {}, body: { "index.html": {} } }],
      [
        "datasource",
        {
          _index: 333,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["date", { _index: 293, title: {}, body: { "entities/Todo.html": {} } }],
      [
        "db",
        {
          _index: 474,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "db_engine",
        {
          _index: 438,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "db_host",
        {
          _index: 439,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "db_name",
        {
          _index: 440,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "db_password",
        {
          _index: 441,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "db_port",
        {
          _index: 442,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "db_user",
        {
          _index: 443,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      ["deal", { _index: 688, title: {}, body: { "license.html": {} } }],
      ["dealings", { _index: 736, title: {}, body: { "license.html": {} } }],
      [
        "declarations",
        {
          _index: 5,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "decorators",
        {
          _index: 72,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "entities/User.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "deeppartial",
        {
          _index: 338,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "default",
        {
          _index: 117,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "defined",
        {
          _index: 74,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "dependencies",
        {
          _index: 3,
          title: { "dependencies.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "description",
        {
          _index: 101,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "injectables/PasswordService.html": {},
            "entities/Todo.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "properties.html": {},
          },
        },
      ],
      ["design", { _index: 613, title: {}, body: { "index.html": {} } }],
      [
        "details",
        {
          _index: 350,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "develop",
        {
          _index: 588,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["development", { _index: 639, title: {}, body: { "index.html": {} } }],
      ["distribute", { _index: 697, title: {}, body: { "license.html": {} } }],
      [
        "docker",
        {
          _index: 765,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "documentation",
        {
          _index: 497,
          title: {},
          body: {
            "coverage.html": {},
            "license.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "documentbuilder",
        {
          _index: 802,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["dotenv", { _index: 539, title: {}, body: { "dependencies.html": {} } }],
      [
        "dto",
        {
          _index: 362,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "dto/create",
        {
          _index: 412,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "due",
        {
          _index: 380,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "during",
        { _index: 153, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      ["e2e", { _index: 647, title: {}, body: { "index.html": {} } }],
      [
        "each",
        {
          _index: 92,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
          },
        },
      ],
      ["efficient", { _index: 582, title: {}, body: { "index.html": {} } }],
      [
        "email",
        {
          _index: 66,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "enableimplicitconversion",
        {
          _index: 44,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "encrypt",
        { _index: 177, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "encrypted",
        {
          _index: 105,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "encryptedpassword",
        {
          _index: 266,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      ["endpoint", { _index: 624, title: {}, body: { "index.html": {} } }],
      ["endpoints", { _index: 621, title: {}, body: { "index.html": {} } }],
      [
        "engine",
        {
          _index: 801,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ensure",
        {
          _index: 775,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "entities",
        {
          _index: 286,
          title: {},
          body: {
            "entities/Todo.html": {},
            "entities/User.html": {},
            "overview.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "entity",
        {
          _index: 83,
          title: { "entities/Todo.html": {}, "entities/User.html": {} },
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        'entity("todos',
        { _index: 314, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        'entity("users',
        { _index: 398, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "entity.ts",
        {
          _index: 288,
          title: {},
          body: {
            "entities/Todo.html": {},
            "entities/User.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "entity.ts:15",
        { _index: 392, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "entity.ts:17",
        {
          _index: 299,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "entity.ts:19",
        {
          _index: 302,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "entity.ts:21",
        {
          _index: 300,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "entity.ts:23",
        {
          _index: 297,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "entity.ts:25",
        {
          _index: 295,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "entity.ts:27",
        { _index: 304, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "entity.ts:29",
        { _index: 307, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "entity/user",
        {
          _index: 413,
          title: {},
          body: {
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "entityclass",
        {
          _index: 351,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "entitytarget",
        {
          _index: 336,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "env",
        {
          _index: 159,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "env/validate",
        {
          _index: 185,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "envfilepath",
        {
          _index: 188,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "environment",
        {
          _index: 186,
          title: {},
          body: {
            "modules/ConfigurationModule.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "environment.ts",
        {
          _index: 426,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "environment.ts:18",
        {
          _index: 457,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:21",
        {
          _index: 460,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:24",
        {
          _index: 461,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:27",
        {
          _index: 459,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:30",
        {
          _index: 458,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:33",
        {
          _index: 456,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:38",
        {
          _index: 464,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:41",
        {
          _index: 465,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:44",
        {
          _index: 463,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:47",
        {
          _index: 462,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:52",
        {
          _index: 468,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:55",
        {
          _index: 471,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:58",
        {
          _index: 467,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:61",
        {
          _index: 469,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:64",
        {
          _index: 470,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:69",
        {
          _index: 455,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "environment.ts:74",
        {
          _index: 466,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "err",
        { _index: 166, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "error",
        {
          _index: 151,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "error(s",
        {
          _index: 493,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "error.code",
        {
          _index: 375,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "error.detail",
        {
          _index: 381,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "error.message",
        {
          _index: 387,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "errors",
        {
          _index: 371,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "errors.length",
        {
          _index: 490,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      ["event", { _index: 723, title: {}, body: { "license.html": {} } }],
      [
        "example",
        {
          _index: 221,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "injectables/TransactionsService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "exception",
        { _index: 123, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "exists",
        {
          _index: 358,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "export",
        {
          _index: 45,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "exports",
        {
          _index: 8,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "expose",
        {
          _index: 84,
          title: {},
          body: { "classes/BasePublicUserDto.html": {} },
        },
      ],
      [
        "expose()@ispositive()@isint",
        {
          _index: 80,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/PublicUserDTO.html": {},
          },
        },
      ],
      [
        "expose()@isstring()@isnotempty",
        {
          _index: 73,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/PublicUserDTO.html": {},
          },
        },
      ],
      [
        "expose()@type(undefined)@validatenested({each",
        {
          _index: 77,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/PublicUserDTO.html": {},
          },
        },
      ],
      [
        "express",
        {
          _index: 533,
          title: {},
          body: { "dependencies.html": {}, "license.html": {} },
        },
      ],
      [
        "extends",
        {
          _index: 200,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "classes/PublicUserDTO.html": {},
          },
        },
      ],
      [
        "externals",
        { _index: 568, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "failed",
        {
          _index: 379,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "false",
        {
          _index: 136,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "field",
        { _index: 202, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "file",
        {
          _index: 22,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["files", { _index: 687, title: {}, body: { "license.html": {} } }],
      ["filtering", { _index: 599, title: {}, body: { "index.html": {} } }],
      ["fitness", { _index: 719, title: {}, body: { "license.html": {} } }],
      [
        "following",
        {
          _index: 620,
          title: {},
          body: { "index.html": {}, "license.html": {} },
        },
      ],
      [
        "forbidnonwhitelisted",
        { _index: 42, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      ["fork", { _index: 541, title: {}, body: { "dependencies.html": {} } }],
      [
        "found",
        {
          _index: 481,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      ["framework", { _index: 580, title: {}, body: { "index.html": {} } }],
      ["free", { _index: 680, title: {}, body: { "license.html": {} } }],
      [
        "fs.readfilesync(cacertpath).tostring",
        {
          _index: 778,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "function",
        {
          _index: 484,
          title: {},
          body: { "classes/ValidateEnvironment.html": {}, "coverage.html": {} },
        },
      ],
      [
        "functions",
        {
          _index: 571,
          title: { "miscellaneous/functions.html": {} },
          body: { "miscellaneous/functions.html": {} },
        },
      ],
      ["furnished", { _index: 704, title: {}, body: { "license.html": {} } }],
      ["generate", { _index: 626, title: {}, body: { "index.html": {} } }],
      [
        "generated",
        { _index: 143, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "generates",
        {
          _index: 141,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "getdockerdbconfig",
        {
          _index: 502,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "getdockerdbconfig(configservice",
        {
          _index: 792,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "getrdsconfig",
        {
          _index: 505,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "getrdsconfig(configservice",
        {
          _index: 794,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "getting",
        {
          _index: 574,
          title: { "index.html": {}, "license.html": {} },
          body: {},
        },
      ],
      [
        "getverceldbconfig",
        {
          _index: 506,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "getverceldbconfig(configservice",
        {
          _index: 793,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "global",
        { _index: 157, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      ["goals", { _index: 609, title: {}, body: { "index.html": {} } }],
      ["granted", { _index: 679, title: {}, body: { "license.html": {} } }],
      ["graph", { _index: 740, title: {}, body: { "modules.html": {} } }],
      ["grow", { _index: 654, title: {}, body: { "index.html": {} } }],
      [
        "handle",
        {
          _index: 367,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      ["handling", { _index: 617, title: {}, body: { "index.html": {} } }],
      [
        "hash",
        {
          _index: 106,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
          },
        },
      ],
      [
        "hash(data",
        {
          _index: 138,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
          },
        },
      ],
      [
        "hash/bcrypt.provider",
        {
          _index: 256,
          title: {},
          body: {
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "hashalgorithm",
        {
          _index: 264,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "hashalgorithminterface",
        {
          _index: 110,
          title: { "interfaces/HashAlgorithmInterface.html": {} },
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "hashed",
        {
          _index: 142,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
          },
        },
      ],
      [
        "hashes",
        {
          _index: 275,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "hashing",
        { _index: 172, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "hashpassword",
        {
          _index: 260,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "hashpassword(password",
        {
          _index: 273,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      ["here", { _index: 665, title: {}, body: { "index.html": {} } }],
      ["hereby", { _index: 678, title: {}, body: { "license.html": {} } }],
      ["holders", { _index: 725, title: {}, body: { "license.html": {} } }],
      [
        "host",
        {
          _index: 752,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:3000",
        {
          _index: 808,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "iam/iam.module",
        { _index: 31, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "iammodule",
        {
          _index: 13,
          title: { "modules/IamModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "id",
        {
          _index: 317,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      ["identifier", { _index: 498, title: {}, body: { "coverage.html": {} } }],
      ["implement", { _index: 596, title: {}, body: { "index.html": {} } }],
      [
        "implements",
        { _index: 109, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      ["implied", { _index: 715, title: {}, body: { "license.html": {} } }],
      [
        "import",
        {
          _index: 25,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "imports",
        {
          _index: 24,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/ConfigurationModule.html": {},
            "modules/IamModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "include",
        {
          _index: 216,
          title: {},
          body: { "classes/CreateUserDto.html": {}, "index.html": {} },
        },
      ],
      ["included", { _index: 710, title: {}, body: { "license.html": {} } }],
      ["including", { _index: 691, title: {}, body: { "license.html": {} } }],
      [
        "index",
        {
          _index: 64,
          title: { "index.html": {} },
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "indicating",
        {
          _index: 270,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "info",
        {
          _index: 20,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "inherited",
        {
          _index: 223,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
          },
        },
      ],
      [
        "inject",
        {
          _index: 191,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "injectable",
        {
          _index: 56,
          title: {
            "injectables/AuthenticationService.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
          body: {
            "injectables/AuthenticationService.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "injectables",
        {
          _index: 57,
          title: {},
          body: {
            "injectables/AuthenticationService.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "injecting",
        {
          _index: 415,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "inserted",
        { _index: 316, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "inside",
        {
          _index: 365,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      ["installation", { _index: 636, title: {}, body: { "index.html": {} } }],
      [
        "installrunning",
        { _index: 638, title: {}, body: { "index.html": {} } },
      ],
      [
        "interface",
        {
          _index: 231,
          title: { "interfaces/HashAlgorithmInterface.html": {} },
          body: {
            "interfaces/HashAlgorithmInterface.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "interfaces",
        {
          _index: 232,
          title: {},
          body: { "interfaces/HashAlgorithmInterface.html": {} },
        },
      ],
      [
        "internal",
        {
          _index: 384,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "internalservererrorexception",
        {
          _index: 145,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "internalservererrorexception(err",
        { _index: 171, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "invalid",
        {
          _index: 798,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "isint",
        {
          _index: 86,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "isint()@ispositive",
        {
          _index: 454,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "isnotempty",
        {
          _index: 87,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "isnotempty()@isstring",
        {
          _index: 95,
          title: {},
          body: {
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "ispositive",
        {
          _index: 88,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "isstring",
        {
          _index: 89,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "isstrongpassword",
        { _index: 229, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "isstrongpassword({minlength",
        { _index: 206, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "issue",
        {
          _index: 359,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "issues",
        {
          _index: 386,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      ["join", { _index: 661, title: {}, body: { "index.html": {} } }],
      [
        "jordach",
        {
          _index: 669,
          title: {},
          body: { "index.html": {}, "license.html": {}, "properties.html": {} },
        },
      ],
      ["jordachmakaya", { _index: 672, title: {}, body: { "index.html": {} } }],
      ["kind", { _index: 714, title: {}, body: { "license.html": {} } }],
      [
        "legend",
        {
          _index: 4,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
      ["liability", { _index: 729, title: {}, body: { "license.html": {} } }],
      ["liable", { _index: 726, title: {}, body: { "license.html": {} } }],
      [
        "license",
        {
          _index: 673,
          title: { "license.html": {} },
          body: { "index.html": {}, "license.html": {}, "properties.html": {} },
        },
      ],
      ["licensed", { _index: 652, title: {}, body: { "index.html": {} } }],
      ["limitation", { _index: 692, title: {}, body: { "license.html": {} } }],
      ["limited", { _index: 716, title: {}, body: { "license.html": {} } }],
      ["limiting", { _index: 604, title: {}, body: { "index.html": {} } }],
      ["linkedin", { _index: 671, title: {}, body: { "index.html": {} } }],
      [
        "list",
        {
          _index: 403,
          title: {},
          body: {
            "entities/User.html": {},
            "index.html": {},
            "properties.html": {},
          },
        },
      ],
      [
        "local",
        {
          _index: 791,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "log",
        {
          _index: 383,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "logger",
        {
          _index: 112,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        'logger("database',
        {
          _index: 787,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'logger("hashalgorithmprovider',
        { _index: 119, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        'logger("transactionservice',
        {
          _index: 353,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        'logger("user',
        { _index: 390, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        'logger("validated',
        {
          _index: 486,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "logger(todo.name",
        { _index: 298, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "logger.log",
        {
          _index: 495,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        'logger.log("you',
        {
          _index: 789,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "logger.log(`${errors.length",
        {
          _index: 492,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "logger.log(`${json.stringify(errors",
        {
          _index: 494,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        'logger.warn("please',
        {
          _index: 795,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["login", { _index: 623, title: {}, body: { "index.html": {} } }],
      [
        "loginuserdto",
        {
          _index: 245,
          title: { "classes/LoginUserDto.html": {} },
          body: { "classes/LoginUserDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "logs",
        {
          _index: 480,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "long",
        { _index: 215, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "lowercase",
        { _index: 218, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "makaya",
        {
          _index: 670,
          title: {},
          body: { "index.html": {}, "license.html": {}, "properties.html": {} },
        },
      ],
      [
        "manage",
        {
          _index: 592,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["managing", { _index: 627, title: {}, body: { "index.html": {} } }],
      [
        "managment/user.service",
        { _index: 422, title: {}, body: { "modules/UsersModule.html": {} } },
      ],
      [
        "manytomany",
        { _index: 311, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "manytomany(undefined",
        { _index: 305, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "match",
        {
          _index: 272,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "matches",
        { _index: 135, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "matching",
        {
          _index: 48,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["measures", { _index: 630, title: {}, body: { "index.html": {} } }],
      ["mechanism", { _index: 608, title: {}, body: { "index.html": {} } }],
      [
        "meet",
        { _index: 203, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "merchantability",
        { _index: 718, title: {}, body: { "license.html": {} } },
      ],
      ["merge", { _index: 695, title: {}, body: { "license.html": {} } }],
      [
        "message",
        { _index: 213, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "metadata",
        { _index: 550, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "methods",
        {
          _index: 114,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "minlength",
        { _index: 230, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "minlowercase",
        { _index: 208, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "minnumbers",
        { _index: 211, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "minsymbols",
        { _index: 212, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "minuppercase",
        { _index: 210, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "miscellaneous",
        {
          _index: 570,
          title: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mit",
        {
          _index: 651,
          title: {},
          body: {
            "index.html": {},
            "license.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["mode", { _index: 642, title: {}, body: { "index.html": {} } }],
      ["modify", { _index: 694, title: {}, body: { "license.html": {} } }],
      [
        "module",
        {
          _index: 0,
          title: {
            "modules/AppModule.html": {},
            "modules/ConfigurationModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
          },
          body: {
            "modules/AppModule.html": {},
            "modules/ConfigurationModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "overview.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "modules",
        {
          _index: 2,
          title: { "modules.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/ConfigurationModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      ["more", { _index: 664, title: {}, body: { "index.html": {} } }],
      [
        "name",
        {
          _index: 67,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "classes/LoginUserDto.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      ["nest", { _index: 650, title: {}, body: { "index.html": {} } }],
      [
        "nestjs/common",
        {
          _index: 27,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "nestjs/config",
        {
          _index: 147,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "nestjs/core",
        {
          _index: 33,
          title: {},
          body: { "modules/AppModule.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "nestjs/platform",
        { _index: 532, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "nestjs/swagger",
        {
          _index: 250,
          title: {},
          body: { "classes/LoginUserDto.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "nestjs/typeorm",
        {
          _index: 181,
          title: {},
          body: {
            "modules/ConfigurationModule.html": {},
            "modules/UsersModule.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "new",
        {
          _index: 38,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "classes/BcryptProvider.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "newentity",
        {
          _index: 337,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "newuser",
        {
          _index: 348,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["node", { _index: 567, title: {}, body: { "dependencies.html": {} } }],
      ["node.js", { _index: 579, title: {}, body: { "index.html": {} } }],
      [
        "noninfringement",
        { _index: 722, title: {}, body: { "license.html": {} } },
      ],
      ["notice", { _index: 708, title: {}, body: { "license.html": {} } }],
      [
        "number",
        {
          _index: 79,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "object",
        {
          _index: 197,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["obtaining", { _index: 683, title: {}, body: { "license.html": {} } }],
      [
        "occurred",
        {
          _index: 382,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "occurs",
        { _index: 152, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "omittype",
        { _index: 249, title: {}, body: { "classes/LoginUserDto.html": {} } },
      ],
      [
        "omittype(createuserdto",
        { _index: 247, title: {}, body: { "classes/LoginUserDto.html": {} } },
      ],
      [
        "ondelete",
        { _index: 395, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "onetomany",
        { _index: 397, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "onetomany(undefined",
        { _index: 393, title: {}, body: { "entities/User.html": {} } },
      ],
      ["open", { _index: 653, title: {}, body: { "index.html": {} } }],
      ["operations", { _index: 616, title: {}, body: { "index.html": {} } }],
      [
        "optional",
        {
          _index: 131,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "options",
        {
          _index: 761,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "otherwise",
        {
          _index: 137,
          title: {},
          body: { "classes/BcryptProvider.html": {}, "license.html": {} },
        },
      ],
      [
        "out",
        {
          _index: 19,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "license.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "output",
        {
          _index: 349,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "overview",
        {
          _index: 742,
          title: { "overview.html": {} },
          body: { "overview.html": {} },
        },
      ],
      [
        "package",
        {
          _index: 527,
          title: { "dependencies.html": {}, "properties.html": {} },
          body: {},
        },
      ],
      ["pagination", { _index: 635, title: {}, body: { "index.html": {} } }],
      [
        "param",
        {
          _index: 148,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "parameters",
        {
          _index: 130,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "parseint(process.env.salt_round",
        { _index: 121, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "part",
        { _index: 156, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      ["particular", { _index: 720, title: {}, body: { "license.html": {} } }],
      [
        "password",
        {
          _index: 168,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "injectables/PasswordService.html": {},
            "entities/User.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "password.service",
        { _index: 257, title: {}, body: { "modules/PasswordModule.html": {} } },
      ],
      [
        "password/password.module",
        { _index: 242, title: {}, body: { "modules/IamModule.html": {} } },
      ],
      [
        "password@@201",
        { _index: 222, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "passwordmodule",
        {
          _index: 240,
          title: { "modules/PasswordModule.html": {} },
          body: {
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "passwords",
        {
          _index: 271,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "passwordservice",
        {
          _index: 254,
          title: { "injectables/PasswordService.html": {} },
          body: {
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "path",
        {
          _index: 780,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["permission", { _index: 677, title: {}, body: { "license.html": {} } }],
      ["permit", { _index: 702, title: {}, body: { "license.html": {} } }],
      ["person", { _index: 682, title: {}, body: { "license.html": {} } }],
      ["persons", { _index: 703, title: {}, body: { "license.html": {} } }],
      ["pg", { _index: 547, title: {}, body: { "dependencies.html": {} } }],
      [
        "phone",
        {
          _index: 356,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "plaintoinstance",
        {
          _index: 473,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "plaintoinstance(validateenvironment",
        {
          _index: 487,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      ["please", { _index: 662, title: {}, body: { "index.html": {} } }],
      ["plugin", { _index: 545, title: {}, body: { "dependencies.html": {} } }],
      [
        "port",
        {
          _index: 754,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["portions", { _index: 712, title: {}, body: { "license.html": {} } }],
      [
        "postgres",
        {
          _index: 372,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "postgres_database",
        {
          _index: 444,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "postgres_password",
        {
          _index: 445,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "postgres_url",
        {
          _index: 446,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "postgres_user",
        {
          _index: 447,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "postgresql",
        {
          _index: 763,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "primarygeneratedcolumn",
        {
          _index: 301,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "private",
        {
          _index: 111,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "process",
        { _index: 155, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "process.env.swagger_licence",
        {
          _index: 810,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "prod",
        {
          _index: 475,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      ["production", { _index: 644, title: {}, body: { "index.html": {} } }],
      ["progressive", { _index: 578, title: {}, body: { "index.html": {} } }],
      ["project", { _index: 576, title: {}, body: { "index.html": {} } }],
      ["projects", { _index: 594, title: {}, body: { "index.html": {} } }],
      [
        "promise",
        {
          _index: 133,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["proper", { _index: 634, title: {}, body: { "index.html": {} } }],
      [
        "properties",
        {
          _index: 65,
          title: { "properties.html": {} },
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "classes/ValidateEnvironment.html": {},
            "properties.html": {},
          },
        },
      ],
      [
        "provide",
        { _index: 36, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "provided",
        {
          _index: 103,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "license.html": {},
          },
        },
      ],
      [
        "providedpassword",
        {
          _index: 268,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "providers",
        {
          _index: 7,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "public",
        {
          _index: 62,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "publicuserdto",
        {
          _index: 280,
          title: { "classes/PublicUserDTO.html": {} },
          body: { "classes/PublicUserDTO.html": {}, "coverage.html": {} },
        },
      ],
      ["publish", { _index: 696, title: {}, body: { "license.html": {} } }],
      ["purpose", { _index: 721, title: {}, body: { "license.html": {} } }],
      ["rate", { _index: 603, title: {}, body: { "index.html": {} } }],
      [
        "rds",
        {
          _index: 431,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["read", { _index: 663, title: {}, body: { "index.html": {} } }],
      [
        "readonly",
        {
          _index: 55,
          title: {},
          body: {
            "controllers/AuthenticationController.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "record",
        {
          _index: 378,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "reflect",
        { _index: 549, title: {}, body: { "dependencies.html": {} } },
      ],
      ["refresh", { _index: 606, title: {}, body: { "index.html": {} } }],
      ["registration", { _index: 622, title: {}, body: { "index.html": {} } }],
      [
        "rejectunauthorized",
        {
          _index: 774,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "related",
        {
          _index: 429,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "removed",
        {
          _index: 322,
          title: {},
          body: { "entities/Todo.html": {}, "entities/User.html": {} },
        },
      ],
      [
        "representing",
        {
          _index: 195,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      ["require", { _index: 595, title: {}, body: { "index.html": {} } }],
      ["required", { _index: 587, title: {}, body: { "index.html": {} } }],
      ["requirements", { _index: 619, title: {}, body: { "index.html": {} } }],
      [
        "reset",
        {
          _index: 18,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "resolves",
        {
          _index: 134,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "restful",
        {
          _index: 589,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["restriction", { _index: 690, title: {}, body: { "license.html": {} } }],
      [
        "results",
        {
          _index: 47,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "license.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "retrieves",
        {
          _index: 786,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "return",
        {
          _index: 162,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "returns",
        {
          _index: 132,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["rights", { _index: 693, title: {}, body: { "license.html": {} } }],
      [
        "rules",
        {
          _index: 479,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "run",
        {
          _index: 552,
          title: {},
          body: { "dependencies.html": {}, "index.html": {} },
        },
      ],
      [
        "running",
        {
          _index: 764,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["rxjs", { _index: 554, title: {}, body: { "dependencies.html": {} } }],
      [
        "salt",
        { _index: 174, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "salt_round",
        {
          _index: 448,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "saltround",
        { _index: 113, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "same",
        {
          _index: 355,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "save",
        {
          _index: 364,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      ["scalable", { _index: 583, title: {}, body: { "index.html": {} } }],
      ["schema", { _index: 612, title: {}, body: { "index.html": {} } }],
      ["script", { _index: 553, title: {}, body: { "dependencies.html": {} } }],
      ["security", { _index: 618, title: {}, body: { "index.html": {} } }],
      [
        "selectdbconfig",
        {
          _index: 182,
          title: {},
          body: {
            "modules/ConfigurationModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "selects",
        {
          _index: 799,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["sell", { _index: 700, title: {}, body: { "license.html": {} } }],
      [
        "server",
        {
          _index: 385,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "setdescription(process.env.swagger_des",
        {
          _index: 804,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        'setlicense("license',
        {
          _index: 809,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "settings",
        {
          _index: 436,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "settitle(process.env.swagger_des",
        {
          _index: 803,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "setversion(process.env.swagger_ver",
        {
          _index: 805,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["shall", { _index: 709, title: {}, body: { "license.html": {} } }],
      ["side", { _index: 584, title: {}, body: { "index.html": {} } }],
      ["skills", { _index: 610, title: {}, body: { "index.html": {} } }],
      [
        "skipmissingproperties",
        {
          _index: 489,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      ["software", { _index: 685, title: {}, body: { "license.html": {} } }],
      ["sorting", { _index: 600, title: {}, body: { "index.html": {} } }],
      [
        "source",
        {
          _index: 21,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "controllers/AuthenticationController.html": {},
            "injectables/AuthenticationService.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "modules/ConfigurationModule.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "modules/IamModule.html": {},
            "classes/LoginUserDto.html": {},
            "modules/PasswordModule.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "modules/TodoModule.html": {},
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "classes/ValidateEnvironment.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "special",
        { _index: 219, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "specific",
        { _index: 204, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "specified",
        {
          _index: 797,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["sponsors", { _index: 656, title: {}, body: { "index.html": {} } }],
      [
        "src/.../database.config.ts",
        {
          _index: 749,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../main.ts",
        {
          _index: 572,
          title: {},
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/.../swagger.doc.ts",
        {
          _index: 750,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../validate",
        {
          _index: 573,
          title: {},
          body: { "miscellaneous/functions.html": {} },
        },
      ],
      [
        "src/app.module.ts",
        { _index: 23, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/configuration/configuration.module.ts",
        {
          _index: 178,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "src/configuration/database/database.config.ts",
        {
          _index: 500,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/configuration/env/validate",
        {
          _index: 425,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "src/configuration/swagger/swagger.doc.ts",
        {
          _index: 509,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/iam/authentication/authentication.controller.ts",
        {
          _index: 51,
          title: {},
          body: {
            "controllers/AuthenticationController.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/iam/authentication/authentication.service.ts",
        {
          _index: 58,
          title: {},
          body: {
            "injectables/AuthenticationService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/iam/iam.module.ts",
        { _index: 241, title: {}, body: { "modules/IamModule.html": {} } },
      ],
      [
        "src/iam/password/hash/bcrypt.provider.ts",
        {
          _index: 100,
          title: {},
          body: { "classes/BcryptProvider.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/iam/password/hash/bcrypt.provider.ts:16",
        { _index: 120, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "src/iam/password/hash/bcrypt.provider.ts:22",
        { _index: 122, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "src/iam/password/hash/bcrypt.provider.ts:32",
        { _index: 129, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "src/iam/password/hash/bcrypt.provider.ts:49",
        { _index: 139, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "src/iam/password/hash/hash",
        {
          _index: 233,
          title: {},
          body: {
            "interfaces/HashAlgorithmInterface.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/iam/password/password.module.ts",
        { _index: 255, title: {}, body: { "modules/PasswordModule.html": {} } },
      ],
      [
        "src/iam/password/password.service.ts",
        {
          _index: 258,
          title: {},
          body: { "injectables/PasswordService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/iam/password/password.service.ts:14",
        {
          _index: 274,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "src/iam/password/password.service.ts:25",
        {
          _index: 267,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "src/iam/password/password.service.ts:5",
        {
          _index: 263,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "src/main.ts",
        {
          _index: 517,
          title: {},
          body: {
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/todo/entity/todo",
        {
          _index: 287,
          title: {},
          body: { "entities/Todo.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/todo/todo.module.ts",
        { _index: 323, title: {}, body: { "modules/TodoModule.html": {} } },
      ],
      [
        "src/transactions/transactions.module.ts",
        {
          _index: 328,
          title: {},
          body: { "modules/TransactionsModule.html": {} },
        },
      ],
      [
        "src/transactions/transactions.service.ts",
        {
          _index: 330,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/transactions/transactions.service.ts:11",
        {
          _index: 334,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "src/transactions/transactions.service.ts:30",
        {
          _index: 339,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "src/users/dto/base",
        {
          _index: 61,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/users/dto/create",
        {
          _index: 194,
          title: {},
          body: { "classes/CreateUserDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/users/dto/login",
        {
          _index: 246,
          title: {},
          body: { "classes/LoginUserDto.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/users/dto/public",
        {
          _index: 281,
          title: {},
          body: { "classes/PublicUserDTO.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/users/entity/user",
        {
          _index: 388,
          title: {},
          body: { "entities/User.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/users/managment/user.service.ts",
        {
          _index: 406,
          title: {},
          body: { "injectables/UserService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/users/managment/user.service.ts:13",
        {
          _index: 409,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "src/users/managment/user.service.ts:26",
        {
          _index: 411,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "src/users/users.module.ts",
        { _index: 421, title: {}, body: { "modules/UsersModule.html": {} } },
      ],
      [
        "ssl",
        {
          _index: 773,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["start", { _index: 640, title: {}, body: { "index.html": {} } }],
      ["start:dev", { _index: 643, title: {}, body: { "index.html": {} } }],
      [
        "start:prodtest",
        { _index: 645, title: {}, body: { "index.html": {} } },
      ],
      [
        "started",
        {
          _index: 575,
          title: { "index.html": {}, "license.html": {} },
          body: {},
        },
      ],
      ["statements", { _index: 499, title: {}, body: { "coverage.html": {} } }],
      ["stay", { _index: 666, title: {}, body: { "index.html": {} } }],
      [
        "stop",
        { _index: 126, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      ["store", { _index: 632, title: {}, body: { "index.html": {} } }],
      [
        "strategy",
        { _index: 158, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "string",
        {
          _index: 71,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "entities/User.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      ["subject", { _index: 705, title: {}, body: { "license.html": {} } }],
      ["sublicense", { _index: 698, title: {}, body: { "license.html": {} } }],
      ["substantial", { _index: 711, title: {}, body: { "license.html": {} } }],
      [
        "successfully",
        {
          _index: 321,
          title: {},
          body: {
            "entities/Todo.html": {},
            "classes/ValidateEnvironment.html": {},
          },
        },
      ],
      [
        "supabase",
        { _index: 556, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "support",
        {
          _index: 657,
          title: {},
          body: { "index.html": {}, "modules.html": {} },
        },
      ],
      ["svg", { _index: 738, title: {}, body: { "modules.html": {} } }],
      [
        "swagger",
        {
          _index: 434,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "swagger_add_svr",
        {
          _index: 449,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "swagger_des",
        {
          _index: 450,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "swagger_licence",
        {
          _index: 451,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "swagger_prefix",
        {
          _index: 452,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "swagger_ver",
        {
          _index: 453,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "swaggerdoc",
        {
          _index: 510,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "synchronize",
        {
          _index: 760,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "t",
        {
          _index: 340,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "table",
        {
          _index: 391,
          title: {},
          body: { "entities/User.html": {}, "coverage.html": {} },
        },
      ],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 526, title: {}, body: { "coverage.html": {} } },
      ],
      ["terser", { _index: 560, title: {}, body: { "dependencies.html": {} } }],
      ["test", { _index: 646, title: {}, body: { "index.html": {} } }],
      [
        "test:covsupport",
        { _index: 649, title: {}, body: { "index.html": {} } },
      ],
      ["test:e2e", { _index: 648, title: {}, body: { "index.html": {} } }],
      ["tests", { _index: 602, title: {}, body: { "index.html": {} } }],
      ["thanks", { _index: 655, title: {}, body: { "index.html": {} } }],
      [
        "this.datasource.transaction",
        {
          _index: 360,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "this.hashalgorithm.compare",
        {
          _index: 279,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "this.hashalgorithm.hash(password",
        {
          _index: 278,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "this.logger.error",
        {
          _index: 376,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        'this.logger.error("failed',
        { _index: 167, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "this.logger.error(err",
        { _index: 169, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "this.logger.log(`new",
        { _index: 315, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "this.logger.log(`successfully",
        { _index: 399, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "this.logger.log(`todo",
        { _index: 320, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "this.logger.log(`total",
        { _index: 402, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "this.logger.log(`updated",
        { _index: 319, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "this.name",
        { _index: 400, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "this.todoid",
        { _index: 318, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "this.todos.length",
        { _index: 404, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "this.transactionservice.createentity(user",
        {
          _index: 347,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "this.userid",
        { _index: 405, title: {}, body: { "entities/User.html": {} } },
      ],
      ["throttling", { _index: 605, title: {}, body: { "index.html": {} } }],
      [
        "throw",
        {
          _index: 170,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "thrown",
        { _index: 124, title: {}, body: { "classes/BcryptProvider.html": {} } },
      ],
      [
        "throws",
        {
          _index: 150,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      ["title", { _index: 290, title: {}, body: { "entities/Todo.html": {} } }],
      [
        "todo",
        {
          _index: 68,
          title: { "entities/Todo.html": {} },
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "entities/User.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "todo.user",
        { _index: 394, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "todo/entity/todo",
        {
          _index: 82,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "entities/User.html": {},
          },
        },
      ],
      [
        "todo/todo.module",
        { _index: 30, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "todoid",
        { _index: 291, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "todomodule",
        {
          _index: 14,
          title: { "modules/TodoModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/TodoModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "todos",
        {
          _index: 94,
          title: {},
          body: {
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "entities/User.html": {},
          },
        },
      ],
      ["token", { _index: 607, title: {}, body: { "index.html": {} } }],
      ["tort", { _index: 733, title: {}, body: { "license.html": {} } }],
      ["touch", { _index: 667, title: {}, body: { "index.html": {} } }],
      [
        "transaction",
        {
          _index: 342,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "transactionalentitymanager",
        {
          _index: 361,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "transactionalentitymanager.create",
        {
          _index: 363,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "transactionalentitymanager.save(entity",
        {
          _index: 366,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "transactions",
        {
          _index: 416,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "transactions.service",
        {
          _index: 329,
          title: {},
          body: { "modules/TransactionsModule.html": {} },
        },
      ],
      [
        "transactions/transactions.module",
        {
          _index: 34,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "transactions/transactions.service",
        {
          _index: 414,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "transactionservice",
        {
          _index: 410,
          title: {},
          body: { "injectables/UserService.html": {} },
        },
      ],
      [
        "transactionsmodule",
        {
          _index: 15,
          title: { "modules/TransactionsModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "transactionsservice",
        {
          _index: 327,
          title: { "injectables/TransactionsService.html": {} },
          body: {
            "modules/TransactionsModule.html": {},
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "transfer",
        {
          _index: 196,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "transform",
        { _index: 41, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "transformer",
        {
          _index: 85,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "transformoptions",
        { _index: 43, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "true",
        {
          _index: 40,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/User.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "try",
        {
          _index: 161,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/TransactionsService.html": {},
          },
        },
      ],
      ["ts", { _index: 542, title: {}, body: { "dependencies.html": {} } }],
      [
        "type",
        {
          _index: 70,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/BcryptProvider.html": {},
            "classes/CreateUserDto.html": {},
            "interfaces/HashAlgorithmInterface.html": {},
            "injectables/PasswordService.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "type(undefined)@validatenested({each",
        {
          _index: 98,
          title: {},
          body: {
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
          },
        },
      ],
      [
        "typeorm",
        {
          _index: 312,
          title: {},
          body: {
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "dependencies.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "typeormmodule",
        {
          _index: 180,
          title: {},
          body: {
            "modules/ConfigurationModule.html": {},
            "modules/UsersModule.html": {},
          },
        },
      ],
      [
        "typeormmodule.forfeature([user",
        { _index: 423, title: {}, body: { "modules/UsersModule.html": {} } },
      ],
      [
        "typeormmodule.forrootasync",
        {
          _index: 190,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "typeormmoduleoptions",
        {
          _index: 751,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["ui", { _index: 558, title: {}, body: { "dependencies.html": {} } }],
      [
        "unique",
        {
          _index: 368,
          title: {},
          body: {
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
          },
        },
      ],
      ["unit", { _index: 601, title: {}, body: { "index.html": {} } }],
      [
        "unknown",
        {
          _index: 277,
          title: {},
          body: { "injectables/PasswordService.html": {} },
        },
      ],
      [
        "updated",
        { _index: 401, title: {}, body: { "entities/User.html": {} } },
      ],
      [
        "updatedat",
        { _index: 292, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "updatedatecolumn",
        { _index: 303, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "uppercase",
        { _index: 217, title: {}, body: { "classes/CreateUserDto.html": {} } },
      ],
      [
        "url",
        {
          _index: 577,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "usage",
        {
          _index: 344,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      [
        "use",
        {
          _index: 631,
          title: {},
          body: { "index.html": {}, "license.html": {} },
        },
      ],
      ["used", { _index: 611, title: {}, body: { "index.html": {} } }],
      [
        "usefactory",
        {
          _index: 192,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "user",
        {
          _index: 199,
          title: { "entities/User.html": {} },
          body: {
            "classes/CreateUserDto.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "user.dto",
        {
          _index: 228,
          title: {},
          body: {
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "injectables/UserService.html": {},
          },
        },
      ],
      [
        "user.dto.ts",
        {
          _index: 63,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/LoginUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "user.dto.ts:11",
        { _index: 96, title: {}, body: { "classes/BaseUserDto.html": {} } },
      ],
      [
        "user.dto.ts:15",
        {
          _index: 81,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
          },
        },
      ],
      [
        "user.dto.ts:19",
        {
          _index: 76,
          title: {},
          body: { "classes/BasePublicUserDto.html": {} },
        },
      ],
      [
        "user.dto.ts:23",
        {
          _index: 75,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/CreateUserDto.html": {},
          },
        },
      ],
      [
        "user.dto.ts:27",
        {
          _index: 78,
          title: {},
          body: { "classes/BasePublicUserDto.html": {} },
        },
      ],
      [
        "user.dto.ts:8",
        { _index: 97, title: {}, body: { "classes/BaseUserDto.html": {} } },
      ],
      [
        "user.todos",
        { _index: 306, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "userid",
        {
          _index: 69,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/PublicUserDTO.html": {},
            "entities/User.html": {},
          },
        },
      ],
      [
        "username",
        {
          _index: 757,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "users",
        {
          _index: 591,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "users/entity/user",
        { _index: 313, title: {}, body: { "entities/Todo.html": {} } },
      ],
      [
        "users/users.module",
        {
          _index: 29,
          title: {},
          body: { "modules/AppModule.html": {}, "modules/IamModule.html": {} },
        },
      ],
      [
        "userservice",
        {
          _index: 345,
          title: { "injectables/UserService.html": {} },
          body: {
            "injectables/TransactionsService.html": {},
            "injectables/UserService.html": {},
            "modules/UsersModule.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "usersmodule",
        {
          _index: 16,
          title: { "modules/UsersModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/UsersModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "usevalue",
        { _index: 37, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "using",
        {
          _index: 107,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "injectables/PasswordService.html": {},
            "injectables/TransactionsService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "valid",
        {
          _index: 776,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "validate",
        {
          _index: 189,
          title: {},
          body: { "modules/ConfigurationModule.html": {} },
        },
      ],
      [
        "validated",
        {
          _index: 482,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "validatedenv",
        {
          _index: 184,
          title: {},
          body: {
            "modules/ConfigurationModule.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "validatedenv(config",
        {
          _index: 485,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "validateenvironment",
        {
          _index: 424,
          title: { "classes/ValidateEnvironment.html": {} },
          body: {
            "classes/ValidateEnvironment.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "validatenested",
        {
          _index: 90,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
          },
        },
      ],
      [
        "validates",
        {
          _index: 476,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "validatesync",
        {
          _index: 472,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "validatesync(validated",
        {
          _index: 488,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "validating",
        {
          _index: 427,
          title: {},
          body: { "classes/ValidateEnvironment.html": {} },
        },
      ],
      [
        "validation",
        {
          _index: 160,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "validationpipe",
        { _index: 26, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "validator",
        {
          _index: 91,
          title: {},
          body: {
            "classes/BasePublicUserDto.html": {},
            "classes/BaseUserDto.html": {},
            "classes/CreateUserDto.html": {},
            "classes/ValidateEnvironment.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "value",
        {
          _index: 118,
          title: {},
          body: {
            "classes/BcryptProvider.html": {},
            "entities/Todo.html": {},
            "injectables/TransactionsService.html": {},
            "entities/User.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["variable", { _index: 501, title: {}, body: { "coverage.html": {} } }],
      [
        "variables",
        {
          _index: 428,
          title: { "miscellaneous/variables.html": {} },
          body: {
            "classes/ValidateEnvironment.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "vercel",
        {
          _index: 432,
          title: {},
          body: {
            "classes/ValidateEnvironment.html": {},
            "dependencies.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["version", { _index: 746, title: {}, body: { "properties.html": {} } }],
      [
        "violation",
        {
          _index: 370,
          title: {},
          body: { "injectables/TransactionsService.html": {} },
        },
      ],
      ["warranties", { _index: 717, title: {}, body: { "license.html": {} } }],
      ["warranty", { _index: 713, title: {}, body: { "license.html": {} } }],
      ["watch", { _index: 641, title: {}, body: { "index.html": {} } }],
      [
        "webpack",
        { _index: 544, title: {}, body: { "dependencies.html": {} } },
      ],
      ["well", { _index: 598, title: {}, body: { "index.html": {} } }],
      ["whether", { _index: 730, title: {}, body: { "license.html": {} } }],
      [
        "whitelist",
        { _index: 39, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      ["without", { _index: 689, title: {}, body: { "license.html": {} } }],
      [
        "working",
        {
          _index: 790,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["yarn", { _index: 637, title: {}, body: { "index.html": {} } }],
      ["you'd", { _index: 660, title: {}, body: { "index.html": {} } }],
      [
        "zoom",
        {
          _index: 17,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/IamModule.html": {},
            "modules/PasswordModule.html": {},
            "modules/TransactionsModule.html": {},
            "modules/UsersModule.html": {},
            "overview.html": {},
          },
        },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "modules/AppModule.html": {
      url: "modules/AppModule.html",
      title: "module - AppModule",
      body: '\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nIamModule\n\nIamModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigurationModule\n                        \n                        \n                            IamModule\n                        \n                        \n                            TodoModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from "@nestjs/common";\nimport { ConfigurationModule } from "./configuration/configuration.module";\nimport { UsersModule } from "./users/users.module";\nimport { TodoModule } from "./todo/todo.module";\nimport { IamModule } from "./iam/iam.module";\nimport { APP_PIPE } from "@nestjs/core";\nimport { TransactionsModule } from "./transactions/transactions.module";\n\n@Module({\n  imports: [\n    ConfigurationModule,\n    UsersModule,\n    TodoModule,\n    IamModule,\n    TransactionsModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        whitelist: true,\n        transform: true,\n        forbidNonWhitelisted: true,\n        transformOptions: {\n          enableImplicitConversion: true,\n        },\n      }),\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "controllers/AuthenticationController.html": {
      url: "controllers/AuthenticationController.html",
      title: "controller - AuthenticationController",
      body: '\n                   \n\n\n\n\n\n\n  Controllers\n  AuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/authentication.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from "@nestjs/common";\nimport { AuthenticationService } from "./authentication.service";\n\n@Controller()\nexport class AuthenticationController {\n  constructor(private readonly authenticationService: AuthenticationService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/AuthenticationService.html": {
      url: "injectables/AuthenticationService.html",
      title: "injectable - AuthenticationService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/authentication/authentication.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from "@nestjs/common";\n\n@Injectable()\nexport class AuthenticationService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/BasePublicUserDto.html": {
      url: "classes/BasePublicUserDto.html",
      title: "class - BasePublicUserDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BasePublicUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/base-public-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                todo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-public-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-public-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-public-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsPositive()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-public-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Todo } from "../../todo/entity/todo-entity";\nimport { Expose, Type } from "class-transformer";\nimport {\n  IsInt,\n  IsNotEmpty,\n  IsPositive,\n  IsString,\n  ValidateNested,\n} from "class-validator";\n\nexport class BasePublicUserDto {\n  @Expose()\n  @IsPositive()\n  @IsInt()\n  readonly userId: number;\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  readonly name: string;\n  @Expose()\n  @IsString()\n  @IsNotEmpty()\n  readonly email: string;\n  @Expose()\n  @Type(() => Todo)\n  @ValidateNested({ each: true })\n  readonly todo: Todo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/BaseUserDto.html": {
      url: "classes/BaseUserDto.html",
      title: "class - BaseUserDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/base-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                todos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/base-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, ValidateNested } from "class-validator";\nimport { Type } from "class-transformer";\nimport { Todo } from "../../todo/entity/todo-entity";\n\nexport class BaseUserDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @Type(() => Todo)\n  @ValidateNested({ each: true })\n  todos: Todo[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/BcryptProvider.html": {
      url: "classes/BcryptProvider.html",
      title: "class - BcryptProvider",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BcryptProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/password/hash/bcrypt.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                Compares the provided data with an encrypted hash using bcrypt.\n\n            \n\n\n            \n                Implements\n            \n            \n                            HashAlgorithmInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                saltRound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compare\n                            \n                            \n                                    Async\n                                hash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger("HashAlgorithmProvider")\n                    \n                \n                    \n                        \n                                Defined in src/iam/password/hash/bcrypt.provider.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        saltRound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : parseInt(process.env.SALT_ROUND)\n                    \n                \n                    \n                        \n                                Defined in src/iam/password/hash/bcrypt.provider.ts:22\n                        \n                    \n\n            \n                \n                    An exception will be thrown, and app will stop if not provided\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        compare\n                        \n                    \n                \n            \n            \n                \n                        \n                    compare(data: string | Buffer, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/bcrypt.provider.ts:32\n                        \n                    \n\n\n            \n                \n                        Compares the provided data with an encrypted hash using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to compare, should be a string.\n\n\n                                            \n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe encrypted data to compare with the hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the data matches the hash, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hash\n                        \n                    \n                \n            \n            \n                \n                        \n                    hash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/bcrypt.provider.ts:49\n                        \n                    \n\n\n            \n                \n                        Asynchronously generates a bcrypt hash for the provided data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be hashed, can be a string or a Buffer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the generated bcrypt hash.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HashAlgorithmInterface } from "./hash-algorithm.interface";\nimport * as bcrypt from "bcrypt";\nimport { InternalServerErrorException, Logger } from "@nestjs/common";\nimport { ConfigService } from "@nestjs/config";\n\n/**\n * Compares the provided data with an encrypted hash using bcrypt.\n *\n * @param data - The data to compare, should be a string.\n * @param hash - The hash to compare the data against.\n * @param encrypted - The encrypted data to compare with the hash.\n * @returns A Promise that resolves to true if the data matches the hash, false otherwise.\n * @throws InternalServerErrorException if an error occurs during the comparison process.\n */\nexport class BcryptProvider implements HashAlgorithmInterface {\n  private readonly logger = new Logger("HashAlgorithmProvider");\n\n  /**\n   * @saltRound : Is part of the Global strategy for env validation,\n   * An exception will be thrown, and app will stop if not provided\n   * */\n  private readonly saltRound = parseInt(process.env.SALT_ROUND);\n\n  /**\n   * Compares the provided data with an encrypted hash using bcrypt.\n   *\n   * @param data - The data to compare, should be a string.\n   * @param encrypted - The encrypted data to compare with the hash.\n   * @returns A Promise that resolves to true if the data matches the hash, false otherwise.\n   * @throws InternalServerErrorException if an error occurs during the comparison process.\n   */\n  async compare(data: string | Buffer, encrypted: string): Promise {\n    try {\n      return await bcrypt.compare(data, encrypted);\n    } catch (err) {\n      this.logger.error("Failed to compare Password");\n      this.logger.error(err);\n      throw new InternalServerErrorException(err);\n    }\n  }\n\n  /**\n   * Asynchronously generates a bcrypt hash for the provided data.\n   *\n   * @param data - The data to be hashed, can be a string or a Buffer.\n   * @returns A Promise that resolves to the generated bcrypt hash.\n   * @throws InternalServerErrorException if an error occurs during the hashing process.\n   */\n  async hash(data: string | Buffer): Promise {\n    try {\n      const salt = await bcrypt.genSalt(this.saltRound);\n      return bcrypt.hashSync(data, salt);\n    } catch (err) {\n      this.logger.error("Failed to encrypt Password");\n      this.logger.error(err);\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/ConfigurationModule.html": {
      url: "modules/ConfigurationModule.html",
      title: "module - ConfigurationModule",
      body: '\n                   \n\n\n\n\n    Modules\n    ConfigurationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/configuration/configuration.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from "@nestjs/common";\nimport { ConfigModule, ConfigService } from "@nestjs/config";\nimport { TypeOrmModule } from "@nestjs/typeorm";\nimport { selectDbConfig } from "./database/database.config";\nimport { ValidatedEnv } from "./env/validate-environment";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ envFilePath: ".env", validate: ValidatedEnv }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: selectDbConfig,\n    }),\n  ],\n})\nexport class ConfigurationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/CreateUserDto.html": {
      url: "classes/CreateUserDto.html",
      title: "class - CreateUserDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a data transfer object for creating a user.\nExtends the BaseUserDto class.\nContains a password field that must meet specific criteria.\n\n            \n\n            \n                Extends\n            \n            \n                            BaseUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                todos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1}, {message: \'Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201\'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseUserDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseUserDto } from "./base-user.dto";\nimport { IsStrongPassword } from "class-validator";\n\n/**\n * Class representing a data transfer object for creating a user.\n * Extends the BaseUserDto class.\n * Contains a password field that must meet specific criteria.\n */\nexport class CreateUserDto extends BaseUserDto {\n  @IsStrongPassword(\n    {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1,\n    },\n    {\n      message:\n        "Password must be at least 8 characters long and include uppercase, lowercase, number, and special character. Example: PassWord@@201",\n    }\n  )\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/HashAlgorithmInterface.html": {
      url: "interfaces/HashAlgorithmInterface.html",
      title: "interface - HashAlgorithmInterface",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HashAlgorithmInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/password/hash/hash-algorithm.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        compare\n                                    \n                                \n                                \n                                    \n                                        hash\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(data: string, hash: string, encrypted: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/hash-algorithm.interface.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                encrypted\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(data: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/hash/hash-algorithm.interface.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface HashAlgorithmInterface {\n  hash(data: string | Buffer): Promise;\n  compare(data: string, hash: string, encrypted: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/IamModule.html": {
      url: "modules/IamModule.html",
      title: "module - IamModule",
      body: '\n                   \n\n\n\n\n    Modules\n    IamModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IamModule\n\n\n\ncluster_IamModule_imports\n\n\n\ncluster_IamModule_providers\n\n\n\n\nPasswordModule\n\nPasswordModule\n\n\n\nIamModule\n\nIamModule\n\nIamModule -->\n\nPasswordModule->IamModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nIamModule -->\n\nUsersModule->IamModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nIamModule -->\n\nAuthenticationService->IamModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iam/iam.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PasswordModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from "@nestjs/common";\nimport { PasswordModule } from "./password/password.module";\nimport { AuthenticationController } from "./authentication/authentication.controller";\nimport { AuthenticationService } from "./authentication/authentication.service";\nimport { UsersModule } from "../users/users.module";\n\n@Module({\n  imports: [PasswordModule, UsersModule],\n  controllers: [AuthenticationController],\n  providers: [AuthenticationService],\n})\nexport class IamModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/LoginUserDto.html": {
      url: "classes/LoginUserDto.html",
      title: "class - LoginUserDto",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, ["todos", "name"])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateUserDto } from "./create-user.dto";\nimport { OmitType } from "@nestjs/swagger";\n\nexport class LoginUserDto extends OmitType(CreateUserDto, ["todos", "name"]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/PasswordModule.html": {
      url: "modules/PasswordModule.html",
      title: "module - PasswordModule",
      body: '\n                   \n\n\n\n\n    Modules\n    PasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswordModule\n\n\n\ncluster_PasswordModule_exports\n\n\n\ncluster_PasswordModule_providers\n\n\n\n\nPasswordService \n\nPasswordService \n\n\n\nPasswordModule\n\nPasswordModule\n\nPasswordService  -->\n\nPasswordModule->PasswordService \n\n\n\n\n\nPasswordService\n\nPasswordService\n\nPasswordModule -->\n\nPasswordService->PasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/iam/password/password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PasswordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from "@nestjs/common";\nimport { BcryptProvider } from "./hash/bcrypt.provider";\nimport { PasswordService } from "./password.service";\n\n@Module({\n  providers: [BcryptProvider, PasswordService],\n  exports: [PasswordService],\n})\nexport class PasswordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/PasswordService.html": {
      url: "injectables/PasswordService.html",
      title: "injectable - PasswordService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/iam/password/password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hashAlgorithm: BcryptProvider)\n                    \n                \n                        \n                            \n                                Defined in src/iam/password/password.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hashAlgorithm\n                                                  \n                                                        \n                                                                        BcryptProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(providedPassword: string | Buffer, encryptedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/password.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Compares a provided password with an encrypted password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                providedPassword\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to compare, can be a string or a Buffer.\n\n\n                                            \n                                        \n                                        \n                                                encryptedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe encrypted password to compare against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to a boolean indicating if the passwords match.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string | Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/iam/password/password.service.ts:14\n                        \n                    \n\n\n            \n                \n                        Asynchronously hashes a password using the bcrypt algorithm.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        string | Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to be hashed, can be a string or a Buffer.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the hashed password.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from "@nestjs/common";\nimport { BcryptProvider } from "./hash/bcrypt.provider";\n\n@Injectable()\nexport class PasswordService {\n  constructor(private readonly hashAlgorithm: BcryptProvider) {}\n\n  /**\n   * Asynchronously hashes a password using the bcrypt algorithm.\n   *\n   * @param password - The password to be hashed, can be a string or a Buffer.\n   * @returns A Promise that resolves to the hashed password.\n   */\n  async hashPassword(password: string | Buffer) {\n    return await this.hashAlgorithm.hash(password);\n  }\n\n  /**\n   * Compares a provided password with an encrypted password.\n   *\n   * @param providedPassword - The password to compare, can be a string or a Buffer.\n   * @param encryptedPassword - The encrypted password to compare against.\n   * @returns A Promise that resolves to a boolean indicating if the passwords match.\n   */\n  async comparePassword(\n    providedPassword: string | Buffer,\n    encryptedPassword: string\n  ): Promise {\n    return await this.hashAlgorithm.compare(\n      providedPassword,\n      encryptedPassword\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/PublicUserDTO.html": {
      url: "classes/PublicUserDTO.html",
      title: "class - PublicUserDTO",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublicUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/public-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BasePublicUserDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                todo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BasePublicUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BasePublicUserDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BasePublicUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BasePublicUserDto:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        todo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)@ValidateNested({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BasePublicUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BasePublicUserDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@IsPositive()@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BasePublicUserDto\n\n                            \n                        \n                    \n                        \n                                Defined in         BasePublicUserDto:15\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BasePublicUserDto } from "./base-public-user.dto";\n\nexport class PublicUserDTO extends BasePublicUserDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "entities/Todo.html": {
      url: "entities/Todo.html",
      title: "entity - Todo",
      body: '\n                   \n\n\n\n\n\n\n\n  Entities\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/todo/entity/todo-entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                todoId\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(Todo.name)\n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        todoId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.todos)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/todo/entity/todo-entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from "typeorm";\nimport { Logger } from "@nestjs/common";\nimport { User } from "../../users/entity/user-entity";\n\n@Entity("todos")\nexport class Todo {\n  private readonly logger = new Logger(Todo.name);\n  @PrimaryGeneratedColumn()\n  todoId: number;\n  @Column()\n  title: string;\n  @Column()\n  description: string;\n  @CreateDateColumn()\n  createdAt: Date;\n  @UpdateDateColumn()\n  updatedAt: Date;\n  @ManyToMany(() => User, (user) => user.todos)\n  user: User;\n\n  @AfterInsert()\n  afterInsert() {\n    this.logger.log(`New todo Inserted : ID :${this.todoId}`);\n  }\n  @AfterUpdate()\n  afterUpdate() {\n    this.logger.log(`Updated todo : ID :${this.todoId}`);\n  }\n  @AfterRemove()\n  afterRemove() {\n    this.logger.log(`todo : ID :${this.todoId} successfully removed`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/TodoModule.html": {
      url: "modules/TodoModule.html",
      title: "module - TodoModule",
      body: '\n                   \n\n\n\n\n    Modules\n    TodoModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/todo/todo.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class TodoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/TransactionsModule.html": {
      url: "modules/TransactionsModule.html",
      title: "module - TransactionsModule",
      body: '\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_providers\n\n\n\n\nTransactionsService \n\nTransactionsService \n\n\n\nTransactionsModule\n\nTransactionsModule\n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/transactions/transactions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TransactionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from "@nestjs/common";\nimport { TransactionsService } from "./transactions.service";\n\n@Module({\n  providers: [TransactionsService],\n  exports: [TransactionsService],\n})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/TransactionsService.html": {
      url: "injectables/TransactionsService.html",
      title: "injectable - TransactionsService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/transactions/transactions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/transactions/transactions.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEntity(entityClass: EntityTarget, newEntity: DeepPartial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/transactions/transactions.service.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Asynchronously creates a transaction for adding a new user.\nExample :// Usage example in UserService\nasync createTransaction(newUser: CreateUserDto): Promise {\n    return this.transactionService.createEntity(User, newUser);\n  }\nOutput: User entity with the provided details\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entityClass\n                                            \n                                                        EntityTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newEntity\n                                            \n                                                        DeepPartial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves with the created User entity.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger("TransactionService")\n                    \n                \n                    \n                        \n                                Defined in src/transactions/transactions.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from "@nestjs/common";\nimport { DataSource, DeepPartial, EntityTarget } from "typeorm";\n\n@Injectable()\nexport class TransactionsService {\n  private readonly logger = new Logger("TransactionService");\n\n  constructor(private readonly dataSource: DataSource) {}\n  /**\n   * Asynchronously creates a transaction for adding a new user.\n   *\n   * @returns A Promise that resolves with the created User entity.\n   * @throws ConflictException if a user with the same email or phone number already exists.\n   * @throws InternalServerErrorException if there is an issue creating the user.\n   *\n   * @example\n   * // Usage example in UserService\n   * async createTransaction(newUser: CreateUserDto): Promise {\n   *     return this.transactionService.createEntity(User, newUser);\n   *   }\n   * Output: User entity with the provided details\n   * @param entityClass\n   * @param newEntity\n   */\n  async createEntity(\n    entityClass: EntityTarget,\n    newEntity: DeepPartial\n  ): Promise {\n    return await this.dataSource.transaction(\n      async (transactionalEntityManager) => {\n        try {\n          // Create the entity using the provided DTO and class\n          const entity = transactionalEntityManager.create(\n            entityClass,\n            newEntity\n          );\n\n          // Save the entity inside the transaction\n          return await transactionalEntityManager.save(entity);\n        } catch (error) {\n          // Handle unique constraint violation errors (Postgres error code 23505)\n          if (error.code === "23505") {\n            this.logger.error(\n              `Conflict creating new record - Transaction Failed due to: ${error.detail}`\n            );\n            throw new ConflictException(\n              `A conflict occurred - Transaction Failed.`\n            );\n          }\n\n          // Log and throw an internal server error for any other issues\n          this.logger.error(\n            `Failed to create new entity due to: ${error.message}`\n          );\n          throw new InternalServerErrorException(\n            `Failed to create new entity.`\n          );\n        }\n      }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "entities/User.html": {
      url: "entities/User.html",
      title: "entity - User",
      body: '\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entity/user-entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                todos\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger("User Table")\n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        todos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Todo[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, todo => todo.user, {onDelete: \'CASCADE\'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entity/user-entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  AfterInsert,\n  AfterRemove,\n  AfterUpdate,\n  Column,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n} from "typeorm";\nimport { Todo } from "../../todo/entity/todo-entity";\nimport { Logger } from "@nestjs/common";\n\n@Entity("users")\nexport class User {\n  private readonly logger = new Logger("User Table");\n  @PrimaryGeneratedColumn()\n  userId: number;\n  @Column()\n  name: string;\n  @Column({ unique: true })\n  email: string;\n  @Column()\n  password: string;\n  @OneToMany(() => Todo, (todo) => todo.user, { onDelete: "CASCADE" })\n  todos: Todo[];\n\n  @AfterInsert()\n  afterInsert() {\n    this.logger.log(`Successfully created new User ${this.name} 🖐️`);\n  }\n  @AfterUpdate()\n  afterUpdate() {\n    this.logger.log(`Successfully Updated 📢 User ${this.name}`);\n    this.logger.log(`Total Todo list number ${this.todos.length}`);\n  }\n  @AfterRemove()\n  afterRemove() {\n    this.logger.log(`Successfully Removed 📢 User with ID: ${this.userId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/UserService.html": {
      url: "injectables/UserService.html",
      title: "injectable - UserService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/managment/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionService: TransactionsService)\n                    \n                \n                        \n                            \n                                Defined in src/users/managment/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionService\n                                                  \n                                                        \n                                                                        TransactionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTransaction(newUser: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/managment/user.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Asynchronously creates a transaction for adding a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newUser\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object representing the new user to be created.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves with the created User entity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from "@nestjs/common";\nimport { DataSource } from "typeorm";\nimport { CreateUserDto } from "../dto/create-user.dto";\nimport { User } from "../entity/user-entity";\nimport { TransactionsService } from "../../transactions/transactions.service";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private readonly transactionService: TransactionsService // Injecting DataSource for transactions\n  ) {}\n\n  /**\n   * Asynchronously creates a transaction for adding a new user.\n   *\n   * @param newUser - The data transfer object representing the new user to be created.\n   * @returns A Promise that resolves with the created User entity.\n   * @throws ConflictException if a user with the same email or phone number already exists.\n   * @throws InternalServerErrorException if there is an issue creating the user.\n   */\n  async createTransaction(newUser: CreateUserDto): Promise {\n    return this.transactionService.createEntity(User, newUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules/UsersModule.html": {
      url: "modules/UsersModule.html",
      title: "module - UsersModule",
      body: '\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nTransactionsModule->UsersModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TransactionsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from "@nestjs/common";\nimport { UserService } from "./managment/user.service";\nimport { TypeOrmModule } from "@nestjs/typeorm";\nimport { User } from "./entity/user-entity";\nimport { TransactionsModule } from "../transactions/transactions.module";\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), TransactionsModule],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/ValidateEnvironment.html": {
      url: "classes/ValidateEnvironment.html",
      title: "class - ValidateEnvironment",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configuration/env/validate-environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for validating environment variables related to AWS RDS, Vercel database, Swagger, and application settings.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                APP_PORT\n                            \n                            \n                                    \n                                    \n                                DB_ENGINE\n                            \n                            \n                                    \n                                    \n                                DB_HOST\n                            \n                            \n                                    \n                                    \n                                DB_NAME\n                            \n                            \n                                    \n                                    \n                                DB_PASSWORD\n                            \n                            \n                                    \n                                    \n                                DB_PORT\n                            \n                            \n                                    \n                                    \n                                DB_USER\n                            \n                            \n                                    \n                                    \n                                POSTGRES_DATABASE\n                            \n                            \n                                    \n                                    \n                                POSTGRES_PASSWORD\n                            \n                            \n                                    \n                                    \n                                POSTGRES_URL\n                            \n                            \n                                    \n                                    \n                                POSTGRES_USER\n                            \n                            \n                                    \n                                    \n                                SALT_ROUND\n                            \n                            \n                                    \n                                    \n                                SWAGGER_ADD_SVR\n                            \n                            \n                                    \n                                    \n                                SWAGGER_DES\n                            \n                            \n                                    \n                                    \n                                SWAGGER_LICENCE\n                            \n                            \n                                    \n                                    \n                                SWAGGER_PREFIX\n                            \n                            \n                                    \n                                    \n                                SWAGGER_VER\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        APP_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_ENGINE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        DB_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        POSTGRES_DATABASE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        POSTGRES_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        POSTGRES_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        POSTGRES_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SALT_ROUND\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_ADD_SVR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_DES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_LICENCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SWAGGER_VER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/configuration/env/validate-environment.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsInt,\n  IsNotEmpty,\n  IsPositive,\n  IsString,\n  validateSync,\n} from "class-validator";\nimport { plainToInstance } from "class-transformer";\nimport { InternalServerErrorException, Logger } from "@nestjs/common";\n\n/**\n * Class for validating environment variables related to AWS RDS, Vercel database, Swagger, and application settings.\n */\nexport class ValidateEnvironment {\n  // AWS RDS\n  @IsNotEmpty()\n  @IsString()\n  DB_HOST: string;\n  @IsInt()\n  @IsPositive()\n  DB_PORT: number;\n  @IsNotEmpty()\n  @IsString()\n  DB_USER: string;\n  @IsNotEmpty()\n  @IsString()\n  DB_PASSWORD: string;\n  @IsNotEmpty()\n  @IsString()\n  DB_NAME: string;\n  @IsNotEmpty()\n  @IsString()\n  DB_ENGINE: string;\n\n  // Vercel db prod\n  @IsNotEmpty()\n  @IsString()\n  POSTGRES_URL: string;\n  @IsNotEmpty()\n  @IsString()\n  POSTGRES_USER: string;\n  @IsNotEmpty()\n  @IsString()\n  POSTGRES_PASSWORD: string;\n  @IsNotEmpty()\n  @IsString()\n  POSTGRES_DATABASE: string;\n\n  // SWAGGER\n  @IsNotEmpty()\n  @IsString()\n  SWAGGER_DES: string;\n  @IsNotEmpty()\n  @IsString()\n  SWAGGER_VER: string;\n  @IsNotEmpty()\n  @IsString()\n  SWAGGER_ADD_SVR: string;\n  @IsNotEmpty()\n  @IsString()\n  SWAGGER_LICENCE: string;\n  @IsNotEmpty()\n  @IsString()\n  SWAGGER_PREFIX: string;\n\n  // APPLICATION\n  @IsInt()\n  @IsPositive()\n  APP_PORT: number;\n\n  // BcryptProvider\n  @IsInt()\n  @IsPositive()\n  SALT_ROUND: number;\n}\n\n/**\n * Validates the provided configuration object based on the ValidateEnvironment class rules.\n * Logs any validation errors and throws an InternalServerErrorException if errors are found.\n * Returns the validated configuration object.\n *\n * @param config - The configuration object to be validated.\n * @returns The validated configuration object.\n */\nexport function ValidatedEnv(config: Record) {\n  const logger = new Logger("Validated Env");\n  const validated = plainToInstance(ValidateEnvironment, config, {\n    enableImplicitConversion: true,\n  });\n  const errors = validateSync(validated, {\n    skipMissingProperties: false,\n  });\n\n  if (errors.length > 0) {\n    logger.log(`${errors.length} error(s) Failed validation`);\n    logger.log(`${JSON.stringify(errors)}`);\n    throw new InternalServerErrorException();\n  }\n  logger.log("😎 Environment Validation successfully validated 🍉");\n\n  return validated;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/configuration/database/database.config.ts\n            \n            variable\n            getDockerDbConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/database/database.config.ts\n            \n            variable\n            getRDSConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/database/database.config.ts\n            \n            variable\n            getVercelDbConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/database/database.config.ts\n            \n            variable\n            selectDbConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/env/validate-environment.ts\n            \n            class\n            ValidateEnvironment\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/configuration/env/validate-environment.ts\n            \n            function\n            ValidatedEnv\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/configuration/swagger/swagger.doc.ts\n            \n            variable\n            swaggerDoc\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/authentication/authentication.controller.ts\n            \n            controller\n            AuthenticationController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/authentication/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/iam/password/hash/bcrypt.provider.ts\n            \n            class\n            BcryptProvider\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/iam/password/hash/hash-algorithm.interface.ts\n            \n            interface\n            HashAlgorithmInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/iam/password/password.service.ts\n            \n            injectable\n            PasswordService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/todo/entity/todo-entity.ts\n            \n            entity\n            Todo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/transactions/transactions.service.ts\n            \n            injectable\n            TransactionsService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/users/dto/base-public-user.dto.ts\n            \n            class\n            BasePublicUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/base-user.dto.ts\n            \n            class\n            BaseUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/users/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/public-user.dto.ts\n            \n            class\n            PublicUserDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/entity/user-entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/managment/user.service.ts\n            \n            injectable\n            UserService\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.5\n        \n            fork-ts-checker-webpack-plugin : ^9.0.2\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            run-script-webpack-plugin : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            supabase : ^1.200.3\n        \n            swagger-ui-express : ^5.0.1\n        \n            terser-webpack-plugin : ^5.3.10\n        \n            typeorm : ^0.3.20\n        \n            vercel : ^37.6.1\n        \n            webpack : ^5.95.0\n        \n            webpack-cli : ^5.1.4\n        \n            webpack-node-externals : ^3.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/functions.html": {
      url: "miscellaneous/functions.html",
      title: "miscellaneous-functions - functions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ValidatedEnv   (src/.../validate-environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/configuration/env/validate-environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ValidatedEnv\n                        \n                    \n                \n            \n            \n                \nValidatedEnv(config: Record)\n                \n            \n\n\n\n\n            \n                \n                        Validates the provided configuration object based on the ValidateEnvironment class rules.\nLogs any validation errors and throws an InternalServerErrorException if errors are found.\nReturns the validated configuration object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe configuration object to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "getting-started - index",
      body: '\n                   \n\n\n  \n\n\n Project URL\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription Todo List API\n\nIn this project we are required to develop a RESTful API to allow users to manage their to-do list. \nThe backend projects will require you to implement:\n\nImplement user authentication as well.\nImplement filtering and sorting for the to-do list\nImplement unit tests for the API\nImplement rate limiting and throttling for the API\nImplement refresh token mechanism for the authentication\n\nGoals\nThe skills used from this project include:\n\nUser authentication\nSchema design and Databases\nRESTful API design\nCRUD operations\nError handling\nSecurity\n\nRequirements\nWe are required to develop a RESTful API with following endpoints\n\nUser registration to create a new user\nLogin endpoint to authenticate the user and generate a token\nCRUD operations for managing the to-do list\nImplement user authentication to allow only authorized users to access the to-do list\nImplement error handling and security measures\nUse a database to store the user and to-do list data (you can use any database of your choice)\nImplement proper data validation\nImplement pagination and filtering for the to-do list\n\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you\'d like to join them, please read more here.\nStay in touch\n\nAuthor - Jordach Makaya\nLinkedin - @jordachmakaya\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "license.html": {
      url: "license.html",
      title: "getting-started - license",
      body: '\n                   \n\nMIT License\nCopyright (c) 2024 Jordach Makaya\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigurationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IamModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TodoModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "overview.html": {
      url: "overview.html",
      title: "overview - overview",
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_IamModule\n\n\n\ncluster_IamModule_imports\n\n\n\ncluster_IamModule_providers\n\n\n\ncluster_PasswordModule\n\n\n\ncluster_PasswordModule_exports\n\n\n\ncluster_PasswordModule_providers\n\n\n\ncluster_TransactionsModule\n\n\n\ncluster_TransactionsModule_exports\n\n\n\ncluster_TransactionsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nConfigurationModule\n\nConfigurationModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nConfigurationModule->AppModule\n\n\n\n\n\nIamModule\n\nIamModule\n\nAppModule -->\n\nIamModule->AppModule\n\n\n\n\n\nTodoModule\n\nTodoModule\n\nAppModule -->\n\nTodoModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nTransactionsModule->UsersModule\n\n\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nTransactionsService \n\nTransactionsService \n\nTransactionsService  -->\n\nTransactionsModule->TransactionsService \n\n\n\nIamModule -->\n\nUsersModule->IamModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nPasswordModule\n\nPasswordModule\n\nIamModule -->\n\nPasswordModule->IamModule\n\n\n\n\n\nPasswordService \n\nPasswordService \n\nPasswordService  -->\n\nPasswordModule->PasswordService \n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nIamModule -->\n\nAuthenticationService->IamModule\n\n\n\n\n\nPasswordService\n\nPasswordService\n\nPasswordModule -->\n\nPasswordService->PasswordModule\n\n\n\n\n\nTransactionsService\n\nTransactionsService\n\nTransactionsModule -->\n\nTransactionsService->TransactionsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "properties.html": {
      url: "properties.html",
      title: "package-properties - properties",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description :  Develop a RESTful API + Auth to allow users to manage their to-do list.\n        \n            License : MIT\n        \n            Author : Jordach Makaya\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getDockerDbConfig   (src/.../database.config.ts)\n                        \n                        \n                            getRDSConfig   (src/.../database.config.ts)\n                        \n                        \n                            getVercelDbConfig   (src/.../database.config.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            selectDbConfig   (src/.../database.config.ts)\n                        \n                        \n                            swaggerDoc   (src/.../swagger.doc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configuration/database/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getDockerDbConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  configService: ConfigService\n): TypeOrmModuleOptions => ({\n  type: "postgres",\n  host: configService.getOrThrow("DATASOURCE_HOST"),\n  port: configService.getOrThrow("DATASOURCE_PORT"),\n  database: configService.getOrThrow("DATASOURCE_DATABASE"),\n  username: configService.getOrThrow("DATASOURCE_USERNAME"),\n  password: configService.getOrThrow("DATASOURCE_PASSWORD"),\n  entities: [],\n  synchronize: true,\n})\n                    \n                \n\n            \n                \n                    Returns the TypeORM module options for connecting to a PostgreSQL database running in a Docker container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRDSConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  configService: ConfigService\n): TypeOrmModuleOptions => ({\n  type: "postgres",\n  host: configService.getOrThrow("DB_HOST"),\n  port: configService.getOrThrow("DB_PORT"),\n  database: configService.getOrThrow("DB_NAME"),\n  username: configService.getOrThrow("DB_USER"),\n  password: configService.getOrThrow("DB_PASSWORD"),\n  entities: [],\n})\n                    \n                \n\n            \n                \n                    Generates TypeORM configuration object for connecting to an AWS RDS PostgreSQL database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVercelDbConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  configService: ConfigService\n): TypeOrmModuleOptions => ({\n  type: "postgres",\n  url: configService.getOrThrow("POSTGRES_URL"),\n  ssl: {\n    rejectUnauthorized: true, // Ensure this is true when using a valid CA\n    // ca: fs.readFileSync(caCertPath).toString(), // Adjust the path accordingly\n  },\n  username: configService.getOrThrow("POSTGRES_USER"),\n  password: configService.getOrThrow("POSTGRES_PASSWORD"),\n  database: configService.getOrThrow("POSTGRES_DATABASE"),\n  host: configService.getOrThrow("POSTGRES_HOST"),\n})\n                    \n                \n\n            \n                \n                    Retrieves the configuration options for the Vercel database.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectDbConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (configService: ConfigService) => {\n  const logger = new Logger("Database Config");\n  if (configService.get("DB_ENGINE") === "docker") {\n    logger.log("You are working on LOCAL DOCKER 🍉 db config");\n    return getDockerDbConfig(configService);\n  } else if (configService.get("DB_ENGINE") === "vercel") {\n    logger.log("You are working on VERCEL 🍉 db config");\n    return getVercelDbConfig(configService);\n  } else if (configService.get("DB_ENGINE") === "postgres") {\n    logger.log("You are working on AWS RDS 🍉 db config");\n    return getRDSConfig(configService);\n  }\n  logger.warn("Please check the DB_ENGINE specified in the configuration");\n  throw new InternalServerErrorException(\n    "Invalid DB_ENGINE specified in configuration"\n  );\n}\n                    \n                \n\n            \n                \n                    Selects the appropriate TypeORM configuration based on the specified database engine, host, or port.\n\n                \n            \n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/configuration/swagger/swagger.doc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerDoc\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle(process.env.SWAGGER_DES || "API Documentation")\n  .setDescription(process.env.SWAGGER_DES || "API Documentation")\n  .setVersion(process.env.SWAGGER_VER || "1.0")\n  .addServer(process.env.SWAGGER_ADD_SVR || "http://localhost:3000")\n  .setLicense("License", process.env.SWAGGER_LICENCE || "MIT")\n  .build()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
  },
};
